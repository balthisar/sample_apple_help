//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

#pragma mark -

//
// File: /System/Library/CoreServices/HelpViewer.app/Contents/MacOS/HelpViewer
// UUID: 1681E51E-2015-308A-AB86-CD39716E8C05
//
//                           Arch: x86_64
//                 Source version: 341.0.0.0.0
//       Minimum Mac OS X version: 10.13.0
//                    SDK version: 10.13.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol DDMViewControllerJSExport <JSExport>
@property(retain) JSValue *toggleAnchorInWebApp;
@property(retain) JSValue *setSidebarStateInWebApp;
@property(readonly) BOOL sidebarState;
@property(readonly) NSString *metaFramework;
@property(readonly) NSString *acEnvironmentName;
@property(readonly) NSString *environmentName;
@property(readonly) NSString *currentAnchor;
@property(readonly) NSString *currentTopicTitle;
@property(readonly) NSString *currentTopicID;
@property(readonly) NSString *currentBookProductVersion;
@property(readonly) NSString *currentBookProduct;
@property(readonly) NSString *currentBookVersion;
@property(readonly) NSString *currentBookBuildID;
@property(readonly) NSString *currentBookLocale;
@property(readonly) NSString *currentBookTitle;
- (void)selectedName:(NSString *)arg1;
- (void)setSidebarExpanded:(BOOL)arg1;
@end

@protocol HPDQueryDelegate <NSObject>
- (void)helpQuery:(HPDQuery *)arg1 didReturnResults:(NSArray *)arg2;

@optional
- (void)helpQueryDidFinishSearching:(HPDQuery *)arg1;
- (void)helpQuery:(HPDQuery *)arg1 didEncounterError:(NSError *)arg2;
- (void)helpQuery:(HPDQuery *)arg1 didReturnActions:(NSArray *)arg2;
- (void)helpQuery:(HPDQuery *)arg1 didReturnSuggestions:(NSArray *)arg2;
@end

@protocol HVContentController
@property(readonly) NSString *currentBookTitle;
@property(retain) NSString *currentScope;
@property(readonly) NSView *view;
@property(readonly) SearchableWebView *webView;
- (void)windowWillClose;
- (DDMAnalytics *)ddmAnalytics;
- (BOOL)findTextFieldIsFirstResponder;
- (void)goHome:(id)arg1;
- (BOOL)loadHistoryItem:(HVHistoryItem *)arg1;
- (void)resizeTo:(float)arg1 height:(float)arg2 duration:(double)arg3 timingFunction:(NSString *)arg4;
- (void)showErrorSheetWithMessageText:(NSString *)arg1 informativeText:(NSString *)arg2;
- (void)pageDidFinishLoading;
- (void)updateSidebarState;
- (void)zoomOverlayFromPoint:(struct CGPoint)arg1 withURL:(NSURL *)arg2;
- (HVShareURLItem *)sharingURLItem;
- (void)mailCurrentPage;
- (BOOL)canShareCurrentPage;
- (void)makeTextSmaller:(id)arg1;
- (void)makeTextLarger:(id)arg1;
- (BOOL)canMakeLarger;
- (BOOL)canMakeSmaller;
- (void)countTOCUse;
- (void)print:(id)arg1;
- (void)searchForQuery:(NSString *)arg1;
- (void)showFindBar:(id)arg1;
- (WebDataSource *)dataForCurrentPage;
- (void)dismissOverlayIfContainsMouseDown:(NSEvent *)arg1;
- (NSString *)stringForSelection;
- (NSURL *)currentURL;
- (BOOL)handleArrowKeyEvent:(NSEvent *)arg1;
@end

@protocol HVHistoryManagerDelegate <NSObject>
- (BOOL)historyManager:(HVHistoryManager *)arg1 loadHistoryItem:(HVHistoryItem *)arg2;

@optional
- (BOOL)historyManager:(HVHistoryManager *)arg1 shouldLoadHistoryItem:(HVHistoryItem *)arg2;
@end

@protocol HVSidebarItem <NSObject>
@property(readonly) BOOL isGroup;
@property(readonly) NSString *itemIdentifier;
@property(retain) NSArray<HVSidebarItem> *childItems;
@property(readonly, nonatomic) NSString *name;
@end

@protocol HVToolbarHistoryDelegate
- (void)goToItem:(HVHistoryItem *)arg1;
- (NSArray *)forwardItems;
- (NSArray *)backwardItems;
- (void)goBackward;
- (void)goForward;
- (BOOL)canGoBackward;
- (BOOL)canGoForward;
@end

@protocol HVURLHandler
- (BOOL)shouldLookOnlineForFile:(NSURL *)arg1;
- (void)handleURL:(NSURL *)arg1;
- (void)setTargetFrame:(WebFrame *)arg1;
@end

@protocol HVURLLoadDelegate
- (NSDate *)fileCreationDateForFileURL:(NSURL *)arg1;
- (BOOL)backForwardListContainsURL:(NSURL *)arg1;
- (void)startWebAppSearchForAnchor:(NSString *)arg1;
- (NSDictionary *)previousSearchResultsForString:(NSString *)arg1;
- (void)setCurrentSearchQuery:(HPDQuery *)arg1;
- (void)removeURLFromCurrentURLs:(NSURL *)arg1;
- (void)setLocalURLForFailedRemoteURL:(NSURL *)arg1;
- (void)setCurrentScope:(NSString *)arg1;
- (NSString *)currentScope;
- (void)handlerHasEndedSearch;
- (void)handlerHasBegunSearch;
- (void)handlerEncounteredError:(NSError *)arg1;
- (void)handlerDidFinishProcess:(HVURLHandler *)arg1;
@end

@protocol JSExport
@end

@protocol NSApplicationDelegate <NSObject>

@optional
- (void)applicationDidChangeOcclusionState:(NSNotification *)arg1;
- (void)applicationDidChangeScreenParameters:(NSNotification *)arg1;
- (void)applicationWillTerminate:(NSNotification *)arg1;
- (void)applicationDidUpdate:(NSNotification *)arg1;
- (void)applicationWillUpdate:(NSNotification *)arg1;
- (void)applicationDidResignActive:(NSNotification *)arg1;
- (void)applicationWillResignActive:(NSNotification *)arg1;
- (void)applicationDidBecomeActive:(NSNotification *)arg1;
- (void)applicationWillBecomeActive:(NSNotification *)arg1;
- (void)applicationDidUnhide:(NSNotification *)arg1;
- (void)applicationWillUnhide:(NSNotification *)arg1;
- (void)applicationDidHide:(NSNotification *)arg1;
- (void)applicationWillHide:(NSNotification *)arg1;
- (void)applicationDidFinishLaunching:(NSNotification *)arg1;
- (void)applicationWillFinishLaunching:(NSNotification *)arg1;
- (void)application:(NSApplication *)arg1 userDidAcceptCloudKitShareWithMetadata:(CKShareMetadata *)arg2;
- (void)application:(NSApplication *)arg1 didUpdateUserActivity:(NSUserActivity *)arg2;
- (void)application:(NSApplication *)arg1 didFailToContinueUserActivityWithType:(NSString *)arg2 error:(NSError *)arg3;
- (BOOL)application:(NSApplication *)arg1 continueUserActivity:(NSUserActivity *)arg2 restorationHandler:(void (^)(NSArray *))arg3;
- (BOOL)application:(NSApplication *)arg1 willContinueUserActivityWithType:(NSString *)arg2;
- (void)application:(NSApplication *)arg1 didDecodeRestorableState:(NSCoder *)arg2;
- (void)application:(NSApplication *)arg1 willEncodeRestorableState:(NSCoder *)arg2;
- (void)application:(NSApplication *)arg1 didReceiveRemoteNotification:(NSDictionary *)arg2;
- (void)application:(NSApplication *)arg1 didFailToRegisterForRemoteNotificationsWithError:(NSError *)arg2;
- (void)application:(NSApplication *)arg1 didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)arg2;
- (NSError *)application:(NSApplication *)arg1 willPresentError:(NSError *)arg2;
- (NSMenu *)applicationDockMenu:(NSApplication *)arg1;
- (BOOL)applicationShouldHandleReopen:(NSApplication *)arg1 hasVisibleWindows:(BOOL)arg2;
- (BOOL)applicationShouldTerminateAfterLastWindowClosed:(NSApplication *)arg1;
- (unsigned long long)application:(NSApplication *)arg1 printFiles:(NSArray *)arg2 withSettings:(NSDictionary *)arg3 showPrintPanels:(BOOL)arg4;
- (BOOL)application:(NSApplication *)arg1 printFile:(NSString *)arg2;
- (BOOL)application:(id)arg1 openFileWithoutUI:(NSString *)arg2;
- (BOOL)applicationOpenUntitledFile:(NSApplication *)arg1;
- (BOOL)applicationShouldOpenUntitledFile:(NSApplication *)arg1;
- (BOOL)application:(NSApplication *)arg1 openTempFile:(NSString *)arg2;
- (void)application:(NSApplication *)arg1 openFiles:(NSArray *)arg2;
- (BOOL)application:(NSApplication *)arg1 openFile:(NSString *)arg2;
- (void)application:(NSApplication *)arg1 openURLs:(NSArray *)arg2;
- (unsigned long long)applicationShouldTerminate:(NSApplication *)arg1;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSControlTextEditingDelegate <NSObject>

@optional
- (NSArray *)control:(NSControl *)arg1 textView:(NSTextView *)arg2 completions:(NSArray *)arg3 forPartialWordRange:(struct _NSRange)arg4 indexOfSelectedItem:(long long *)arg5;
- (BOOL)control:(NSControl *)arg1 textView:(NSTextView *)arg2 doCommandBySelector:(SEL)arg3;
- (BOOL)control:(NSControl *)arg1 isValidObject:(id)arg2;
- (void)control:(NSControl *)arg1 didFailToValidatePartialString:(NSString *)arg2 errorDescription:(NSString *)arg3;
- (BOOL)control:(NSControl *)arg1 didFailToFormatString:(NSString *)arg2 errorDescription:(NSString *)arg3;
- (BOOL)control:(NSControl *)arg1 textShouldEndEditing:(NSText *)arg2;
- (BOOL)control:(NSControl *)arg1 textShouldBeginEditing:(NSText *)arg2;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSMenuDelegate <NSObject>

@optional
- (struct CGRect)confinementRectForMenu:(NSMenu *)arg1 onScreen:(NSScreen *)arg2;
- (void)menu:(NSMenu *)arg1 willHighlightItem:(NSMenuItem *)arg2;
- (void)menuDidClose:(NSMenu *)arg1;
- (void)menuWillOpen:(NSMenu *)arg1;
- (BOOL)menuHasKeyEquivalent:(NSMenu *)arg1 forEvent:(NSEvent *)arg2 target:(id *)arg3 action:(SEL *)arg4;
- (BOOL)menu:(NSMenu *)arg1 updateItem:(NSMenuItem *)arg2 atIndex:(long long)arg3 shouldCancel:(BOOL)arg4;
- (long long)numberOfItemsInMenu:(NSMenu *)arg1;
- (void)menuNeedsUpdate:(NSMenu *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (BOOL)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSOutlineViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)outlineViewItemDidCollapse:(NSNotification *)arg1;
- (void)outlineViewItemWillCollapse:(NSNotification *)arg1;
- (void)outlineViewItemDidExpand:(NSNotification *)arg1;
- (void)outlineViewItemWillExpand:(NSNotification *)arg1;
- (void)outlineViewSelectionIsChanging:(NSNotification *)arg1;
- (void)outlineViewColumnDidResize:(NSNotification *)arg1;
- (void)outlineViewColumnDidMove:(NSNotification *)arg1;
- (void)outlineViewSelectionDidChange:(NSNotification *)arg1;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldShowOutlineCellForItem:(id)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (double)outlineView:(NSOutlineView *)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (void)outlineView:(NSOutlineView *)arg1 willDisplayOutlineCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 item:(id)arg4;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldCollapseItem:(id)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldExpandItem:(id)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 isGroupItem:(id)arg2;
- (NSCell *)outlineView:(NSOutlineView *)arg1 dataCellForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldTrackCell:(NSCell *)arg2 forTableColumn:(NSTableColumn *)arg3 item:(id)arg4;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldShowCellExpansionForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldTypeSelectForEvent:(NSEvent *)arg2 withCurrentSearchString:(NSString *)arg3;
- (id)outlineView:(NSOutlineView *)arg1 nextTypeSelectMatchFromItem:(id)arg2 toItem:(id)arg3 forString:(NSString *)arg4;
- (NSString *)outlineView:(NSOutlineView *)arg1 typeSelectStringForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (double)outlineView:(NSOutlineView *)arg1 heightOfRowByItem:(id)arg2;
- (NSString *)outlineView:(NSOutlineView *)arg1 toolTipForCell:(NSCell *)arg2 rect:(struct CGRect *)arg3 tableColumn:(NSTableColumn *)arg4 item:(id)arg5 mouseLocation:(struct CGPoint)arg6;
- (void)outlineView:(NSOutlineView *)arg1 didDragTableColumn:(NSTableColumn *)arg2;
- (void)outlineView:(NSOutlineView *)arg1 didClickTableColumn:(NSTableColumn *)arg2;
- (void)outlineView:(NSOutlineView *)arg1 mouseDownInHeaderOfTableColumn:(NSTableColumn *)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldSelectTableColumn:(NSTableColumn *)arg2;
- (NSIndexSet *)outlineView:(NSOutlineView *)arg1 selectionIndexesForProposedSelection:(NSIndexSet *)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldSelectItem:(id)arg2;
- (BOOL)selectionShouldChangeInOutlineView:(NSOutlineView *)arg1;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldEditTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (void)outlineView:(NSOutlineView *)arg1 willDisplayCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 item:(id)arg4;
- (void)outlineView:(NSOutlineView *)arg1 didRemoveRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (void)outlineView:(NSOutlineView *)arg1 didAddRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (NSTableRowView *)outlineView:(NSOutlineView *)arg1 rowViewForItem:(id)arg2;
- (NSView *)outlineView:(NSOutlineView *)arg1 viewForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
@end

@protocol NSPasteboardWriting <NSObject>
- (id)pasteboardPropertyListForType:(NSString *)arg1;
- (NSArray *)writableTypesForPasteboard:(NSPasteboard *)arg1;

@optional
- (unsigned long long)writingOptionsForType:(NSString *)arg1 pasteboard:(NSPasteboard *)arg2;
@end

@protocol NSSearchFieldDelegate <NSTextFieldDelegate>

@optional
- (void)searchFieldDidEndSearching:(NSSearchField *)arg1;
- (void)searchFieldDidStartSearching:(NSSearchField *)arg1;
@end

@protocol NSSecureCoding <NSCoding>
+ (BOOL)supportsSecureCoding;
@end

@protocol NSSharingServiceDelegate <NSObject>

@optional
- (NSView *)anchoringViewForSharingService:(NSSharingService *)arg1 showRelativeToRect:(struct CGRect *)arg2 preferredEdge:(unsigned long long *)arg3;
- (NSWindow *)sharingService:(NSSharingService *)arg1 sourceWindowForShareItems:(NSArray *)arg2 sharingContentScope:(long long *)arg3;
- (NSImage *)sharingService:(NSSharingService *)arg1 transitionImageForShareItem:(id)arg2 contentRect:(struct CGRect *)arg3;
- (struct CGRect)sharingService:(NSSharingService *)arg1 sourceFrameOnScreenForShareItem:(id)arg2;
- (void)sharingService:(NSSharingService *)arg1 didShareItems:(NSArray *)arg2;
- (void)sharingService:(NSSharingService *)arg1 didFailToShareItems:(NSArray *)arg2 error:(NSError *)arg3;
- (void)sharingService:(NSSharingService *)arg1 willShareItems:(NSArray *)arg2;
@end

@protocol NSSharingServicePickerDelegate <NSObject>

@optional
- (void)sharingServicePicker:(NSSharingServicePicker *)arg1 didChooseSharingService:(NSSharingService *)arg2;
- (id <NSSharingServiceDelegate>)sharingServicePicker:(NSSharingServicePicker *)arg1 delegateForSharingService:(NSSharingService *)arg2;
- (NSArray *)sharingServicePicker:(NSSharingServicePicker *)arg1 sharingServicesForItems:(NSArray *)arg2 proposedSharingServices:(NSArray *)arg3;
@end

@protocol NSTableViewDataSource <NSObject>

@optional
- (NSArray *)tableView:(NSTableView *)arg1 namesOfPromisedFilesDroppedAtDestination:(NSURL *)arg2 forDraggedRowsWithIndexes:(NSIndexSet *)arg3;
- (BOOL)tableView:(NSTableView *)arg1 acceptDrop:(id <NSDraggingInfo>)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (unsigned long long)tableView:(NSTableView *)arg1 validateDrop:(id <NSDraggingInfo>)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (BOOL)tableView:(NSTableView *)arg1 writeRowsWithIndexes:(NSIndexSet *)arg2 toPasteboard:(NSPasteboard *)arg3;
- (void)tableView:(NSTableView *)arg1 updateDraggingItemsForDrag:(id <NSDraggingInfo>)arg2;
- (void)tableView:(NSTableView *)arg1 draggingSession:(NSDraggingSession *)arg2 endedAtPoint:(struct CGPoint)arg3 operation:(unsigned long long)arg4;
- (void)tableView:(NSTableView *)arg1 draggingSession:(NSDraggingSession *)arg2 willBeginAtPoint:(struct CGPoint)arg3 forRowIndexes:(NSIndexSet *)arg4;
- (id <NSPasteboardWriting>)tableView:(NSTableView *)arg1 pasteboardWriterForRow:(long long)arg2;
- (void)tableView:(NSTableView *)arg1 sortDescriptorsDidChange:(NSArray *)arg2;
- (void)tableView:(NSTableView *)arg1 setObjectValue:(id)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (id)tableView:(NSTableView *)arg1 objectValueForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(NSTableView *)arg1;
@end

@protocol NSTableViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)tableViewSelectionIsChanging:(NSNotification *)arg1;
- (void)tableViewColumnDidResize:(NSNotification *)arg1;
- (void)tableViewColumnDidMove:(NSNotification *)arg1;
- (void)tableViewSelectionDidChange:(NSNotification *)arg1;
- (NSArray *)tableView:(NSTableView *)arg1 rowActionsForRow:(long long)arg2 edge:(long long)arg3;
- (BOOL)tableView:(NSTableView *)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (double)tableView:(NSTableView *)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (BOOL)tableView:(NSTableView *)arg1 isGroupRow:(long long)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldTypeSelectForEvent:(NSEvent *)arg2 withCurrentSearchString:(NSString *)arg3;
- (long long)tableView:(NSTableView *)arg1 nextTypeSelectMatchFromRow:(long long)arg2 toRow:(long long)arg3 forString:(NSString *)arg4;
- (NSString *)tableView:(NSTableView *)arg1 typeSelectStringForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (double)tableView:(NSTableView *)arg1 heightOfRow:(long long)arg2;
- (void)tableView:(NSTableView *)arg1 didDragTableColumn:(NSTableColumn *)arg2;
- (void)tableView:(NSTableView *)arg1 didClickTableColumn:(NSTableColumn *)arg2;
- (void)tableView:(NSTableView *)arg1 mouseDownInHeaderOfTableColumn:(NSTableColumn *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldSelectTableColumn:(NSTableColumn *)arg2;
- (NSIndexSet *)tableView:(NSTableView *)arg1 selectionIndexesForProposedSelection:(NSIndexSet *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldSelectRow:(long long)arg2;
- (BOOL)selectionShouldChangeInTableView:(NSTableView *)arg1;
- (NSCell *)tableView:(NSTableView *)arg1 dataCellForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (BOOL)tableView:(NSTableView *)arg1 shouldTrackCell:(NSCell *)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (BOOL)tableView:(NSTableView *)arg1 shouldShowCellExpansionForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (NSString *)tableView:(NSTableView *)arg1 toolTipForCell:(NSCell *)arg2 rect:(struct CGRect *)arg3 tableColumn:(NSTableColumn *)arg4 row:(long long)arg5 mouseLocation:(struct CGPoint)arg6;
- (BOOL)tableView:(NSTableView *)arg1 shouldEditTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (void)tableView:(NSTableView *)arg1 willDisplayCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (void)tableView:(NSTableView *)arg1 didRemoveRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (void)tableView:(NSTableView *)arg1 didAddRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (NSTableRowView *)tableView:(NSTableView *)arg1 rowViewForRow:(long long)arg2;
- (NSView *)tableView:(NSTableView *)arg1 viewForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
@end

@protocol NSTextFieldDelegate <NSControlTextEditingDelegate>

@optional
- (BOOL)textField:(NSTextField *)arg1 textView:(NSTextView *)arg2 shouldSelectCandidateAtIndex:(unsigned long long)arg3;
- (NSArray *)textField:(NSTextField *)arg1 textView:(NSTextView *)arg2 candidates:(NSArray *)arg3 forSelectedRange:(struct _NSRange)arg4;
- (NSArray *)textField:(NSTextField *)arg1 textView:(NSTextView *)arg2 candidatesForSelectedRange:(struct _NSRange)arg3;
@end

@protocol NSTextFinderBarContainer <NSObject>
@property(getter=isFindBarVisible) BOOL findBarVisible;
@property(retain) NSView *findBarView;
- (void)findBarViewDidChangeHeight;

@optional
- (NSView *)contentView;
@end

@protocol NSTextFinderClient <NSObject>

@optional
@property(readonly, copy) NSArray *visibleCharacterRanges;
@property(copy) NSArray *selectedRanges;
@property(readonly) struct _NSRange firstSelectedRange;
@property(readonly) NSString *string;
@property(readonly, getter=isEditable) BOOL editable;
@property(readonly) BOOL allowsMultipleSelection;
@property(readonly, getter=isSelectable) BOOL selectable;
- (void)drawCharactersInRange:(struct _NSRange)arg1 forContentView:(NSView *)arg2;
- (NSArray *)rectsForCharacterRange:(struct _NSRange)arg1;
- (NSView *)contentViewAtIndex:(unsigned long long)arg1 effectiveCharacterRange:(struct _NSRange *)arg2;
- (void)didReplaceCharacters;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(NSString *)arg2;
- (BOOL)shouldReplaceCharactersInRanges:(NSArray *)arg1 withStrings:(NSArray *)arg2;
- (void)scrollRangeToVisible:(struct _NSRange)arg1;
- (unsigned long long)stringLength;
- (NSString *)stringAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2 endsWithSearchBoundary:(char *)arg3;
@end

@protocol NSToolbarDelegate <NSObject>

@optional
- (void)toolbarDidRemoveItem:(NSNotification *)arg1;
- (void)toolbarWillAddItem:(NSNotification *)arg1;
- (NSArray *)toolbarSelectableItemIdentifiers:(NSToolbar *)arg1;
- (NSArray *)toolbarAllowedItemIdentifiers:(NSToolbar *)arg1;
- (NSArray *)toolbarDefaultItemIdentifiers:(NSToolbar *)arg1;
- (NSToolbarItem *)toolbar:(NSToolbar *)arg1 itemForItemIdentifier:(NSString *)arg2 willBeInsertedIntoToolbar:(BOOL)arg3;
@end

@protocol NSURLSessionDataDelegate <NSURLSessionTaskDelegate>

@optional
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 willCacheResponse:(NSCachedURLResponse *)arg3 completionHandler:(void (^)(NSCachedURLResponse *))arg4;
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 didReceiveData:(NSData *)arg3;
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 didBecomeStreamTask:(NSURLSessionStreamTask *)arg3;
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 didBecomeDownloadTask:(NSURLSessionDownloadTask *)arg3;
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 didReceiveResponse:(NSURLResponse *)arg3 completionHandler:(void (^)(long long))arg4;
@end

@protocol NSURLSessionDelegate <NSObject>

@optional
- (void)URLSessionDidFinishEventsForBackgroundURLSession:(NSURLSession *)arg1;
- (void)URLSession:(NSURLSession *)arg1 didReceiveChallenge:(NSURLAuthenticationChallenge *)arg2 completionHandler:(void (^)(long long, NSURLCredential *))arg3;
- (void)URLSession:(NSURLSession *)arg1 didBecomeInvalidWithError:(NSError *)arg2;
@end

@protocol NSURLSessionTaskDelegate <NSURLSessionDelegate>

@optional
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didCompleteWithError:(NSError *)arg3;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didFinishCollectingMetrics:(NSURLSessionTaskMetrics *)arg3;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didSendBodyData:(long long)arg3 totalBytesSent:(long long)arg4 totalBytesExpectedToSend:(long long)arg5;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 needNewBodyStream:(void (^)(NSInputStream *))arg3;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didReceiveChallenge:(NSURLAuthenticationChallenge *)arg3 completionHandler:(void (^)(long long, NSURLCredential *))arg4;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 willPerformHTTPRedirection:(NSHTTPURLResponse *)arg3 newRequest:(NSURLRequest *)arg4 completionHandler:(void (^)(NSURLRequest *))arg5;
- (void)URLSession:(NSURLSession *)arg1 taskIsWaitingForConnectivity:(NSURLSessionTask *)arg2;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 willBeginDelayedRequest:(NSURLRequest *)arg3 completionHandler:(void (^)(long long, NSURLRequest *))arg4;
@end

@protocol NSUserInterfaceValidations
- (BOOL)validateUserInterfaceItem:(id <NSValidatedUserInterfaceItem>)arg1;
@end

@protocol NSWindowDelegate <NSObject>

@optional
- (void)windowDidChangeOcclusionState:(NSNotification *)arg1;
- (void)windowDidExitVersionBrowser:(NSNotification *)arg1;
- (void)windowWillExitVersionBrowser:(NSNotification *)arg1;
- (void)windowDidEnterVersionBrowser:(NSNotification *)arg1;
- (void)windowWillEnterVersionBrowser:(NSNotification *)arg1;
- (void)windowDidExitFullScreen:(NSNotification *)arg1;
- (void)windowWillExitFullScreen:(NSNotification *)arg1;
- (void)windowDidEnterFullScreen:(NSNotification *)arg1;
- (void)windowWillEnterFullScreen:(NSNotification *)arg1;
- (void)windowDidEndLiveResize:(NSNotification *)arg1;
- (void)windowWillStartLiveResize:(NSNotification *)arg1;
- (void)windowDidEndSheet:(NSNotification *)arg1;
- (void)windowWillBeginSheet:(NSNotification *)arg1;
- (void)windowDidChangeBackingProperties:(NSNotification *)arg1;
- (void)windowDidChangeScreenProfile:(NSNotification *)arg1;
- (void)windowDidChangeScreen:(NSNotification *)arg1;
- (void)windowDidUpdate:(NSNotification *)arg1;
- (void)windowDidDeminiaturize:(NSNotification *)arg1;
- (void)windowDidMiniaturize:(NSNotification *)arg1;
- (void)windowWillMiniaturize:(NSNotification *)arg1;
- (void)windowWillClose:(NSNotification *)arg1;
- (void)windowDidResignMain:(NSNotification *)arg1;
- (void)windowDidBecomeMain:(NSNotification *)arg1;
- (void)windowDidResignKey:(NSNotification *)arg1;
- (void)windowDidBecomeKey:(NSNotification *)arg1;
- (void)windowDidMove:(NSNotification *)arg1;
- (void)windowWillMove:(NSNotification *)arg1;
- (void)windowDidExpose:(NSNotification *)arg1;
- (void)windowDidResize:(NSNotification *)arg1;
- (void)window:(NSWindow *)arg1 didDecodeRestorableState:(NSCoder *)arg2;
- (void)window:(NSWindow *)arg1 willEncodeRestorableState:(NSCoder *)arg2;
- (struct CGSize)window:(NSWindow *)arg1 willResizeForVersionBrowserWithMaxPreferredSize:(struct CGSize)arg2 maxAllowedSize:(struct CGSize)arg3;
- (void)windowDidFailToExitFullScreen:(NSWindow *)arg1;
- (void)window:(NSWindow *)arg1 startCustomAnimationToEnterFullScreenOnScreen:(NSScreen *)arg2 withDuration:(double)arg3;
- (NSArray *)customWindowsToEnterFullScreenForWindow:(NSWindow *)arg1 onScreen:(NSScreen *)arg2;
- (void)window:(NSWindow *)arg1 startCustomAnimationToExitFullScreenWithDuration:(double)arg2;
- (NSArray *)customWindowsToExitFullScreenForWindow:(NSWindow *)arg1;
- (void)windowDidFailToEnterFullScreen:(NSWindow *)arg1;
- (void)window:(NSWindow *)arg1 startCustomAnimationToEnterFullScreenWithDuration:(double)arg2;
- (NSArray *)customWindowsToEnterFullScreenForWindow:(NSWindow *)arg1;
- (unsigned long long)window:(NSWindow *)arg1 willUseFullScreenPresentationOptions:(unsigned long long)arg2;
- (struct CGSize)window:(NSWindow *)arg1 willUseFullScreenContentSize:(struct CGSize)arg2;
- (BOOL)window:(NSWindow *)arg1 shouldDragDocumentWithEvent:(NSEvent *)arg2 from:(struct CGPoint)arg3 withPasteboard:(NSPasteboard *)arg4;
- (BOOL)window:(NSWindow *)arg1 shouldPopUpDocumentPathMenu:(NSMenu *)arg2;
- (struct CGRect)window:(NSWindow *)arg1 willPositionSheet:(NSWindow *)arg2 usingRect:(struct CGRect)arg3;
- (NSUndoManager *)windowWillReturnUndoManager:(NSWindow *)arg1;
- (BOOL)windowShouldZoom:(NSWindow *)arg1 toFrame:(struct CGRect)arg2;
- (struct CGRect)windowWillUseStandardFrame:(NSWindow *)arg1 defaultFrame:(struct CGRect)arg2;
- (struct CGSize)windowWillResize:(NSWindow *)arg1 toSize:(struct CGSize)arg2;
- (id)windowWillReturnFieldEditor:(NSWindow *)arg1 toObject:(id)arg2;
- (BOOL)windowShouldClose:(NSWindow *)arg1;
@end

@protocol QLPreviewPanelDataSource
- (id <QLPreviewItem>)previewPanel:(QLPreviewPanel *)arg1 previewItemAtIndex:(long long)arg2;
- (long long)numberOfPreviewItemsInPreviewPanel:(QLPreviewPanel *)arg1;
@end

@protocol QLPreviewPanelDelegate <NSWindowDelegate>

@optional
- (id)previewPanel:(QLPreviewPanel *)arg1 transitionImageForPreviewItem:(id <QLPreviewItem>)arg2 contentRect:(struct CGRect *)arg3;
- (struct CGRect)previewPanel:(QLPreviewPanel *)arg1 sourceFrameOnScreenForPreviewItem:(id <QLPreviewItem>)arg2;
- (BOOL)previewPanel:(QLPreviewPanel *)arg1 handleEvent:(NSEvent *)arg2;
@end

@protocol WebDocumentText <NSObject>
- (void)deselectAll;
- (void)selectAll;
- (NSAttributedString *)selectedAttributedString;
- (NSString *)selectedString;
- (NSAttributedString *)attributedString;
- (NSString *)string;
- (BOOL)supportsTextEncoding;
@end

@protocol WebFrameLoadDelegate <NSObject>

@optional
- (void)webView:(WebView *)arg1 didCreateJavaScriptContext:(JSContext *)arg2 forFrame:(WebFrame *)arg3;
- (void)webView:(WebView *)arg1 windowScriptObjectAvailable:(WebScriptObject *)arg2;
- (void)webView:(WebView *)arg1 didClearWindowObject:(WebScriptObject *)arg2 forFrame:(WebFrame *)arg3;
- (void)webView:(WebView *)arg1 willCloseFrame:(WebFrame *)arg2;
- (void)webView:(WebView *)arg1 didCancelClientRedirectForFrame:(WebFrame *)arg2;
- (void)webView:(WebView *)arg1 willPerformClientRedirectToURL:(NSURL *)arg2 delay:(double)arg3 fireDate:(NSDate *)arg4 forFrame:(WebFrame *)arg5;
- (void)webView:(WebView *)arg1 didChangeLocationWithinPageForFrame:(WebFrame *)arg2;
- (void)webView:(WebView *)arg1 didFailLoadWithError:(NSError *)arg2 forFrame:(WebFrame *)arg3;
- (void)webView:(WebView *)arg1 didFinishLoadForFrame:(WebFrame *)arg2;
- (void)webView:(WebView *)arg1 didReceiveIcon:(NSImage *)arg2 forFrame:(WebFrame *)arg3;
- (void)webView:(WebView *)arg1 didReceiveTitle:(NSString *)arg2 forFrame:(WebFrame *)arg3;
- (void)webView:(WebView *)arg1 didCommitLoadForFrame:(WebFrame *)arg2;
- (void)webView:(WebView *)arg1 didFailProvisionalLoadWithError:(NSError *)arg2 forFrame:(WebFrame *)arg3;
- (void)webView:(WebView *)arg1 didReceiveServerRedirectForProvisionalLoadForFrame:(WebFrame *)arg2;
- (void)webView:(WebView *)arg1 didStartProvisionalLoadForFrame:(WebFrame *)arg2;
@end

@protocol WebPolicyDelegate <NSObject>

@optional
- (void)webView:(WebView *)arg1 unableToImplementPolicyWithError:(NSError *)arg2 frame:(WebFrame *)arg3;
- (void)webView:(WebView *)arg1 decidePolicyForMIMEType:(NSString *)arg2 request:(NSURLRequest *)arg3 frame:(WebFrame *)arg4 decisionListener:(id <WebPolicyDecisionListener>)arg5;
- (void)webView:(WebView *)arg1 decidePolicyForNewWindowAction:(NSDictionary *)arg2 request:(NSURLRequest *)arg3 newFrameName:(NSString *)arg4 decisionListener:(id <WebPolicyDecisionListener>)arg5;
- (void)webView:(WebView *)arg1 decidePolicyForNavigationAction:(NSDictionary *)arg2 request:(NSURLRequest *)arg3 frame:(WebFrame *)arg4 decisionListener:(id <WebPolicyDecisionListener>)arg5;
@end

@protocol WebResourceLoadDelegate <NSObject>

@optional
- (void)webView:(WebView *)arg1 plugInFailedWithError:(NSError *)arg2 dataSource:(WebDataSource *)arg3;
- (void)webView:(WebView *)arg1 resource:(id)arg2 didFailLoadingWithError:(NSError *)arg3 fromDataSource:(WebDataSource *)arg4;
- (void)webView:(WebView *)arg1 resource:(id)arg2 didFinishLoadingFromDataSource:(WebDataSource *)arg3;
- (void)webView:(WebView *)arg1 resource:(id)arg2 didReceiveContentLength:(long long)arg3 fromDataSource:(WebDataSource *)arg4;
- (void)webView:(WebView *)arg1 resource:(id)arg2 didReceiveResponse:(NSURLResponse *)arg3 fromDataSource:(WebDataSource *)arg4;
- (void)webView:(WebView *)arg1 resource:(id)arg2 didCancelAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg3 fromDataSource:(WebDataSource *)arg4;
- (void)webView:(WebView *)arg1 resource:(id)arg2 didReceiveAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg3 fromDataSource:(WebDataSource *)arg4;
- (NSURLRequest *)webView:(WebView *)arg1 resource:(id)arg2 willSendRequest:(NSURLRequest *)arg3 redirectResponse:(NSURLResponse *)arg4 fromDataSource:(WebDataSource *)arg5;
- (id)webView:(WebView *)arg1 identifierForInitialRequest:(NSURLRequest *)arg2 fromDataSource:(WebDataSource *)arg3;
@end

@protocol WebUIDelegate <NSObject>

@optional
- (struct CGRect)webViewContentRect:(WebView *)arg1;
- (void)webView:(WebView *)arg1 setContentRect:(struct CGRect)arg2;
- (NSString *)webView:(WebView *)arg1 runJavaScriptTextInputPanelWithPrompt:(NSString *)arg2 defaultText:(NSString *)arg3;
- (BOOL)webView:(WebView *)arg1 runJavaScriptConfirmPanelWithMessage:(NSString *)arg2;
- (void)webView:(WebView *)arg1 runJavaScriptAlertPanelWithMessage:(NSString *)arg2;
- (void)webView:(WebView *)arg1 drawFooterInRect:(struct CGRect)arg2;
- (void)webView:(WebView *)arg1 drawHeaderInRect:(struct CGRect)arg2;
- (float)webViewFooterHeight:(WebView *)arg1;
- (float)webViewHeaderHeight:(WebView *)arg1;
- (void)webView:(WebView *)arg1 printFrameView:(WebFrameView *)arg2;
- (void)webView:(WebView *)arg1 willPerformDragSourceAction:(unsigned long long)arg2 fromPoint:(struct CGPoint)arg3 withPasteboard:(NSPasteboard *)arg4;
- (unsigned long long)webView:(WebView *)arg1 dragSourceActionMaskForPoint:(struct CGPoint)arg2;
- (void)webView:(WebView *)arg1 willPerformDragDestinationAction:(unsigned long long)arg2 forDraggingInfo:(id <NSDraggingInfo>)arg3;
- (unsigned long long)webView:(WebView *)arg1 dragDestinationActionMaskForDraggingInfo:(id <NSDraggingInfo>)arg2;
- (BOOL)webView:(WebView *)arg1 shouldPerformAction:(SEL)arg2 fromSender:(id)arg3;
- (BOOL)webView:(WebView *)arg1 validateUserInterfaceItem:(id <NSValidatedUserInterfaceItem>)arg2 defaultValidation:(BOOL)arg3;
- (NSArray *)webView:(WebView *)arg1 contextMenuItemsForElement:(NSDictionary *)arg2 defaultMenuItems:(NSArray *)arg3;
- (void)webView:(WebView *)arg1 mouseDidMoveOverElement:(NSDictionary *)arg2 modifierFlags:(unsigned long long)arg3;
- (void)webView:(WebView *)arg1 runOpenPanelForFileButtonWithResultListener:(id <WebOpenPanelResultListener>)arg2 allowMultipleFiles:(BOOL)arg3;
- (void)webView:(WebView *)arg1 runOpenPanelForFileButtonWithResultListener:(id <WebOpenPanelResultListener>)arg2;
- (BOOL)webView:(WebView *)arg1 runBeforeUnloadConfirmPanelWithMessage:(NSString *)arg2 initiatedByFrame:(WebFrame *)arg3;
- (NSString *)webView:(WebView *)arg1 runJavaScriptTextInputPanelWithPrompt:(NSString *)arg2 defaultText:(NSString *)arg3 initiatedByFrame:(WebFrame *)arg4;
- (BOOL)webView:(WebView *)arg1 runJavaScriptConfirmPanelWithMessage:(NSString *)arg2 initiatedByFrame:(WebFrame *)arg3;
- (void)webView:(WebView *)arg1 runJavaScriptAlertPanelWithMessage:(NSString *)arg2 initiatedByFrame:(WebFrame *)arg3;
- (struct CGRect)webViewFrame:(WebView *)arg1;
- (void)webView:(WebView *)arg1 setFrame:(struct CGRect)arg2;
- (void)webView:(WebView *)arg1 setResizable:(BOOL)arg2;
- (BOOL)webViewIsResizable:(WebView *)arg1;
- (void)webView:(WebView *)arg1 setStatusBarVisible:(BOOL)arg2;
- (BOOL)webViewIsStatusBarVisible:(WebView *)arg1;
- (void)webView:(WebView *)arg1 setToolbarsVisible:(BOOL)arg2;
- (BOOL)webViewAreToolbarsVisible:(WebView *)arg1;
- (NSString *)webViewStatusText:(WebView *)arg1;
- (void)webView:(WebView *)arg1 setStatusText:(NSString *)arg2;
- (void)webView:(WebView *)arg1 makeFirstResponder:(NSResponder *)arg2;
- (NSResponder *)webViewFirstResponder:(WebView *)arg1;
- (void)webViewUnfocus:(WebView *)arg1;
- (void)webViewFocus:(WebView *)arg1;
- (void)webViewClose:(WebView *)arg1;
- (void)webViewRunModal:(WebView *)arg1;
- (WebView *)webView:(WebView *)arg1 createWebViewModalDialogWithRequest:(NSURLRequest *)arg2;
- (void)webViewShow:(WebView *)arg1;
- (WebView *)webView:(WebView *)arg1 createWebViewWithRequest:(NSURLRequest *)arg2;
@end

@interface HVBasicWindowController : NSObject <WebUIDelegate>
{
    NSWindow *basicWindow;
    WebView *basicWebview;
    NSURLRequest *_request;
    HVWebDelegate *_webDelegate;
}

+ (id)sharedWindowController;
@property(retain) HVWebDelegate *webDelegate; // @synthesize webDelegate=_webDelegate;
@property(retain) NSURLRequest *request; // @synthesize request=_request;
- (void).cxx_destruct;
- (void)windowWillClose:(id)arg1;
- (void)openBasicWindow;
- (unsigned long long)webView:(id)arg1 dragDestinationActionMaskForDraggingInfo:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HVExtPrefsOpenHandler : NSObject
{
    NSString *_bundleId;
}

+ (BOOL)executeWithParams:(id)arg1 error:(id *)arg2;
@property(retain, nonatomic) NSString *bundleId; // @synthesize bundleId=_bundleId;
- (void).cxx_destruct;
- (BOOL)_openSystemPrefPaneWithId:(id)arg1 anchor:(id)arg2;
- (BOOL)openAnchor:(id)arg1;
- (BOOL)open;
- (id)initWithBundleId:(id)arg1;

@end

@interface HVWebViewFindController : NSObject <NSTextFinderClient, NSUserInterfaceValidations>
{
    unsigned long long _updateCount;
    NSTextFinder *_textFinder;
    NSString *_targetString;
    unsigned long long _findOptions;
    NSProgress *_currentProgress;
    NSMapTable *_domRangesToMatches;
    WebView *_webView;
    struct CGRect _visibleDocumentRect;
}

@property(readonly, nonatomic) WebView *webView; // @synthesize webView=_webView;
@property(nonatomic) struct CGRect visibleDocumentRect; // @synthesize visibleDocumentRect=_visibleDocumentRect;
@property(retain, nonatomic) NSMapTable *domRangesToMatches; // @synthesize domRangesToMatches=_domRangesToMatches;
@property(retain, nonatomic) NSProgress *currentProgress; // @synthesize currentProgress=_currentProgress;
@property(nonatomic) unsigned long long findOptions; // @synthesize findOptions=_findOptions;
@property(retain, nonatomic) NSString *targetString; // @synthesize targetString=_targetString;
- (void).cxx_destruct;
- (BOOL)findBarUsesRegularControls;
- (BOOL)findBarDrawsBackground;
- (void)updateSidebarState;
- (void)_updateFromSidebar;
- (void)update;
- (void)_viewDidScroll:(id)arg1;
- (void)_viewDidResize:(id)arg1;
- (id)_matchForDOMRange:(id)arg1;
- (void)_findMatchesStartingAtRange:(id)arg1 stoppingAtRange:(id)arg2 maxResults:(unsigned long long)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_findAllMatchesWithProgress:(id)arg1 currentRange:(id)arg2 endRange:(id)arg3 resultCollector:(CDUnknownBlockType)arg4;
- (void)findMatchesForString:(id)arg1 relativeToMatch:(id)arg2 findOptions:(unsigned long long)arg3 maxResults:(unsigned long long)arg4 resultCollector:(CDUnknownBlockType)arg5;
- (void)selectFindMatch:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)scrollFindMatchToVisible:(id)arg1;
- (void)getSelectedText:(CDUnknownBlockType)arg1;
- (void)performTextFinderAction:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
@property(readonly) BOOL allowsMultipleSelection;
- (BOOL)editable;
@property(readonly, nonatomic) NSTextFinder *textFinder; // @synthesize textFinder=_textFinder;
- (void)reset;
- (void)tearDown;
- (id)initWithWebView:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, getter=isEditable) BOOL editable;
@property(readonly) struct _NSRange firstSelectedRange;
@property(readonly) unsigned long long hash;
@property(readonly, getter=isSelectable) BOOL selectable;
@property(copy) NSArray *selectedRanges;
@property(readonly) NSString *string;
@property(readonly) Class superclass;
@property(readonly, copy) NSArray *visibleCharacterRanges;

@end

@interface _HVTextFindMatch : NSObject
{
    HVWebViewFindController *_findController;
    DOMRange *_domRange;
    NSView *_containingView;
    NSArray *_rawTextRects;
    WebView *_renderView;
}

@property(retain, nonatomic) WebView *renderView; // @synthesize renderView=_renderView;
@property(retain, nonatomic) NSArray *rawTextRects; // @synthesize rawTextRects=_rawTextRects;
@property(retain, nonatomic) NSView *containingView; // @synthesize containingView=_containingView;
@property(retain, nonatomic) DOMRange *domRange; // @synthesize domRange=_domRange;
@property(nonatomic) __weak HVWebViewFindController *findController; // @synthesize findController=_findController;
- (void).cxx_destruct;
- (void)generateTextImage:(CDUnknownBlockType)arg1;
- (id)renderFromRange:(id)arg1;
- (id)textRects;

@end

@interface HVLogger : NSObject
{
    NSArray *logs;
}

+ (void)logMessage:(id)arg1 inFile:(const char *)arg2 line:(int)arg3 category:(int)arg4 type:(unsigned char)arg5;
+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)logMessage:(id)arg1 inFile:(const char *)arg2 line:(int)arg3 category:(int)arg4 type:(unsigned char)arg5;
- (id)init;

@end

@interface HVHelpView : HVWebViewContainerView <NSMenuDelegate, QLPreviewPanelDataSource, QLPreviewPanelDelegate, WebUIDelegate>
{
    SearchableWebView *_webView;
    NSTextField *_findTextField;
    NSTextField *_findStatusTextField;
    HVHelpViewController *_controller;
    NSString *_draggedPath;
    struct CGSize _minSize;
    BOOL _progressAnimating;
    NSMutableArray *_delayedActionQueue;
    BOOL _firstTime;
    WebFrame *_lastFrame;
    long long _selectedSearchMenuItemTag;
    NSFont *_systemFont;
    NSString *_macHelpTitle;
    BOOL _lastSearchSucceeded;
    NSMutableDictionary *_knownBooks;
    double _pageSizeMultiplierAtGestureStart;
    double _cumulativeMagnifyDelta;
    double _stickyTextMagnifyGestureDirection;
    NSTrackingArea *_mouseMovedTrackingArea;
    QLPreviewPanel *_previewPanel;
    struct CGRect _zoomFromRect;
    NSURL *_previewItemURL;
}

@property(retain) QLPreviewPanel *previewPanel; // @synthesize previewPanel=_previewPanel;
@property(retain) NSURL *previewItemURL; // @synthesize previewItemURL=_previewItemURL;
@property struct CGRect zoomFromRect; // @synthesize zoomFromRect=_zoomFromRect;
@property(readonly) SearchableWebView *webView; // @synthesize webView=_webView;
@property __weak HVHelpViewController *controller; // @synthesize controller=_controller;
- (void).cxx_destruct;
- (struct CGRect)_centeredOriginRectFromPoint:(struct CGPoint)arg1;
- (struct CGRect)previewPanel:(id)arg1 sourceFrameOnScreenForPreviewItem:(id)arg2;
- (id)previewPanel:(id)arg1 customViewForPreviewItem:(id)arg2;
- (BOOL)previewPanel:(id)arg1 handleEvent:(id)arg2;
- (void)endPreviewPanelControl:(id)arg1;
- (void)beginPreviewPanelControl:(id)arg1;
- (BOOL)acceptsPreviewPanelControl:(id)arg1;
- (id)previewPanel:(id)arg1 previewItemAtIndex:(long long)arg2;
- (long long)numberOfPreviewItemsInPreviewPanel:(id)arg1;
- (void)zoomOverlayFromPoint:(struct CGPoint)arg1 withURL:(id)arg2;
- (void)saveFileWrapperToDownloadsFolder:(id)arg1 originatingURL:(id)arg2;
- (id)stringForSelection;
- (void)makeSearchTextFieldFirstResponder:(id)arg1;
- (void)setupFirstResponder:(id)arg1;
- (void)magnifyWithEvent:(id)arg1;
- (void)beginGestureWithEvent:(id)arg1;
- (void)dismissOverlayIfContainsMouseDown:(id)arg1;
- (void)findPrevious:(id)arg1;
- (void)findNext:(id)arg1;
- (void)showFindBar:(id)arg1;
- (void)makeTextSmaller:(id)arg1;
- (void)makeTextLarger:(id)arg1;
- (id)forwardList;
- (id)backList;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)scrollDown;
- (void)scrollUp;
- (void)mouseMoved:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (BOOL)isOpaque;
- (void)print:(id)arg1;
- (void)resizeSubviewsWithOldSize:(struct CGSize)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (unsigned long long)draggingSourceOperationMaskForLocal:(BOOL)arg1;
- (void)concludeDragOperation:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (id)currentHistoryLocation;
- (id)currentURL;
- (void)setMinSize:(struct CGSize)arg1;
- (struct CGSize)minSize;
- (id)draggedPath;
- (void)setDraggedPath:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)webView:(id)arg1 addMessageToConsole:(id)arg2;
- (void)webView:(id)arg1 runJavaScriptAlertPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3;
- (void)webView:(id)arg1 drawFooterInRect:(struct CGRect)arg2;
- (float)webViewFooterHeight:(id)arg1;
- (id)webView:(id)arg1 contextMenuItemsForElement:(id)arg2 defaultMenuItems:(id)arg3;
- (void)webView:(id)arg1 saveFrameView:(id)arg2 showingPanel:(BOOL)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HVLevelIndicatorCell : NSLevelIndicatorCell
{
    BOOL drawInFrame;
}

- (void)setDrawInFrame:(BOOL)arg1;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface HVTextView : NSTextView
{
}

- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;

@end

@interface HVXHelpIconURLHandler : HVURLHandler
{
}

+ (id)sharedIconURLCache;
- (id)process;

@end

@interface HVWindow : NSPanel
{
    BOOL _firstResponderIsLocked;
}

- (void)sendEvent:(id)arg1;
- (void)setFirstResponderIsLocked:(BOOL)arg1;
- (BOOL)firstResponderIsLocked;
- (BOOL)makeFirstResponder:(id)arg1;
- (BOOL)becomeFirstResponder;
- (BOOL)acceptsFirstResponder;
- (BOOL)canBecomeMainWindow;
- (void)awakeFromNib;

@end

@interface HVLocalizedStringAccessor : NSObject
{
}

+ (id)sharedLocalizedStringAccessor;
+ (void)initialize;
- (id)_localizedStringFromHelpUIBundleForKey:(id)arg1 value:(id)arg2;
- (id)init;

@end

@interface DDMAnalytics : NSObject
{
    BOOL _countsLogged;
    long long mtAppSearchUsed;
    long long mtDDMTocUseCount;
    long long mtDDMAssetNotFoundCount;
    long long mtDDMBookNotFoundCount;
    long long mtCDSUnreachableCount;
    long long mtDDMOfflineMessageShownCount;
    long long mtHVOfflineMessageShownCount;
    long long mtDDMTopicFallBackCount;
    long long mtDDMPathLength;
    long long mtDDMTopicNotFoundCount;
    long long mtDDMLinkClicked;
    long long mtDDMOpenItClicked;
    long long mtDDMTaskClicked;
}

+ (id)sharedAnalytics;
@property BOOL countsLogged; // @synthesize countsLogged=_countsLogged;
@property long long mtDDMTaskClicked; // @synthesize mtDDMTaskClicked;
@property long long mtDDMOpenItClicked; // @synthesize mtDDMOpenItClicked;
@property long long mtDDMLinkClicked; // @synthesize mtDDMLinkClicked;
@property long long mtDDMTopicNotFoundCount; // @synthesize mtDDMTopicNotFoundCount;
@property long long mtDDMPathLength; // @synthesize mtDDMPathLength;
@property long long mtDDMTopicFallBackCount; // @synthesize mtDDMTopicFallBackCount;
@property long long mtHVOfflineMessageShownCount; // @synthesize mtHVOfflineMessageShownCount;
@property long long mtDDMOfflineMessageShownCount; // @synthesize mtDDMOfflineMessageShownCount;
@property long long mtCDSUnreachableCount; // @synthesize mtCDSUnreachableCount;
@property long long mtDDMBookNotFoundCount; // @synthesize mtDDMBookNotFoundCount;
@property long long mtDDMAssetNotFoundCount; // @synthesize mtDDMAssetNotFoundCount;
@property long long mtDDMTocUseCount; // @synthesize mtDDMTocUseCount;
@property long long mtAppSearchUsed; // @synthesize mtAppSearchUsed;
- (BOOL)_isLoggableID:(id)arg1 withTitle:(id)arg2;
- (void)_mtLogAccessType;
- (void)_mtLogLinkUsage;
- (void)_mtLogSession;
- (void)_mtLogErrors;
- (void)mtLogDDMCounts;
- (void)mtLogContentUsageForDDMTopic:(id)arg1;
- (id)init;

@end

@interface HVHelpURL : NSURL
{
    NSString *_unescapedString;
    NSString *_command;
    NSDictionary *_arguments;
    unsigned int _CFStringEncodingUsed;
    unsigned long long _type;
}

- (void).cxx_destruct;
- (id)description;
- (void)_parseFullURL;
- (id)_parseArgumentsFromString:(id)arg1;
- (void)_parseArguments;
- (void)_parseCommand;
- (void)_setArguments:(id)arg1;
- (void)_setCommand:(id)arg1;
@property(readonly) __weak NSDictionary *arguments; // @dynamic arguments;
@property(readonly) __weak NSString *mainArgument; // @dynamic mainArgument;
@property(readonly) __weak NSString *command; // @dynamic command;
- (unsigned long long)type;
- (void)setUnescapedString:(id)arg1;
- (id)unescapedString;
- (id)initWithString:(id)arg1;

@end

@interface HVHistoryManager : NSObject
{
    HVHistoryItem *_currentItem;
    id <HVHistoryManagerDelegate> _delegate;
    NSMutableArray *_stack;
}

@property(retain) NSMutableArray *stack; // @synthesize stack=_stack;
@property __weak id <HVHistoryManagerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain) HVHistoryItem *currentItem; // @synthesize currentItem=_currentItem;
- (void).cxx_destruct;
@property(readonly) NSArray *backwardItems;
@property(readonly) NSArray *forwardItems;
- (id)displayableItems;
@property(readonly) BOOL canGoBackward;
@property(readonly) BOOL canGoForward;
- (void)clearHistory;
- (BOOL)goToItem:(id)arg1;
- (BOOL)loadPreviousItem;
- (BOOL)loadNextItem;
- (BOOL)_loadItem:(id)arg1;
- (id)getPreviousItem;
- (id)getNextItem;
- (void)_pruneErrorItems;
- (long long)_findPreviousItemIndex;
- (long long)_findNextItemIndex;
- (id)addHistoryItem:(id)arg1;
- (id)historyItems;
@property BOOL persistsHistory;
- (void)_persistHistoryDelayed;
- (void)_persistHistory;
- (void)_restorePersistantHistory;
- (id)init;

@end

@interface HelpApplication : NSApplication <NSApplicationDelegate>
{
    LibraryMenuController *_libraryMenuController;
    NSMenuItem *_kbSearchesMenuItem;
    NSMenuItem *_viewMenuItem;
    BOOL _lastEventWasOAPP;
    BOOL _shouldShowHVWindow;
    BOOL _sidebarExpanded;
    BOOL _scrollingVertically;
    NSURL *_initialURL;
    HelpWindowController *_windowController;
}

@property(retain) HelpWindowController *windowController; // @synthesize windowController=_windowController;
@property(readonly) NSURL *initialURL; // @synthesize initialURL=_initialURL;
- (void).cxx_destruct;
@property BOOL sidebarExpanded;
- (BOOL)isOnline;
- (void)_removeOpenRecentMenu;
- (void)sendEvent:(id)arg1;
- (id)currentContentController;
- (BOOL)sendAction:(SEL)arg1 to:(id)arg2 from:(id)arg3;
- (struct _NSModalSession *)beginModalSessionForWindow:(id)arg1;
- (void)_handleGetURLEvent:(id)arg1 withReplyEvent:(id)arg2;
- (void)processURL:(id)arg1;
- (BOOL)isDDMHelpURL:(id)arg1;
- (void)application:(id)arg1 openFiles:(id)arg2;
- (BOOL)applicationShouldOpenUntitledFile:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationDidFinishLaunching:(id)arg1;
- (void)applicationWillFinishLaunching:(id)arg1;
- (BOOL)application:(id)arg1 printFile:(id)arg2;
- (BOOL)lastEventWasOAPP;
- (void)setLastEventWasOAPP:(BOOL)arg1;
- (id)window;
@property(readonly) LibraryMenuController *libraryMenuController;
- (void)toggleIncludesKBSearches:(id)arg1;
- (void)showAboutBox:(id)arg1;
- (void)_ensureJavaScriptAndAppleScriptEnabled;
- (void)_setupLogging;
- (id)init;
- (void)application:(id)arg1 runTest:(unsigned long long)arg2 duration:(double)arg3;
- (id)selectedText;
- (id)currentURL;
- (id)goHomeScriptCommand:(id)arg1;
- (id)goForwardScriptCommand:(id)arg1;
- (id)goBackScriptCommand:(id)arg1;
- (id)doSearchScriptCommand:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HVToolbarItem : NSToolbarItem
{
}

- (id)control;
- (void)validate;

@end

@interface HVToolbarController : NSObject <NSToolbarDelegate, NSMenuDelegate, NSSharingServicePickerDelegate, NSSharingServiceDelegate>
{
    NSToolbar *_toolbar;
    NSMutableDictionary *_toolbarItems;
    NSArray *_defaultItems;
    NSSegmentedControl *_navButtons;
    NSSegmentedControl *_shareButton;
    NSSegmentedControl *_tocButton;
    HVSearchField *_searchField;
    NSProgressIndicator *_progressIndicator;
    NSMenu *_scopeMenu;
    NSMenuItem *_currentBookMenuItem;
    NSMenuItem *_allBooksMenuItem;
    NSMenuItem *_kbSearchesMenuItem;
    NSMenu *_forwardMenu;
    NSMenu *_backMenu;
    HVTextView *_searchFieldEditor;
    NSMenuItem *_findMenuItem;
    BOOL _tocButtonEnabled;
    id <HVContentController> _contentViewController;
    id <HVToolbarHistoryDelegate> _delegate;
    HVSearchController *_searchController;
}

@property BOOL tocButtonEnabled; // @synthesize tocButtonEnabled=_tocButtonEnabled;
@property(retain) HVSearchController *searchController; // @synthesize searchController=_searchController;
@property __weak id <HVToolbarHistoryDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain) id <HVContentController> contentViewController; // @synthesize contentViewController=_contentViewController;
- (void).cxx_destruct;
- (id)searchScopeForSearchController:(id)arg1;
- (void)searchController:(id)arg1 selectedSuggestionString:(id)arg2;
- (void)searchControllerDismissedSuggestionWindow:(id)arg1;
- (id)sharingServicePicker:(id)arg1 sharingServicesForItems:(id)arg2 proposedSharingServices:(id)arg3;
- (id)dataForCurrentPage;
- (void)sharePage:(id)arg1;
- (void)tocButtonPressed:(id)arg1;
- (void)emailPage:(id)arg1;
- (void)makeTextSmaller:(id)arg1;
- (void)makeTextLarger:(id)arg1;
- (void)printPage:(id)arg1;
- (void)stopSpinner;
- (void)startSpinner;
- (id)fieldEditorForObject:(id)arg1;
- (void)toggleKBSearchesMenuItemState:(id)arg1;
- (void)updateSearchTextField:(id)arg1;
- (void)doSearch:(id)arg1;
- (void)TBCshowTOCButton:(BOOL)arg1;
- (BOOL)includeKBResultsSelected;
- (void)navButtonPressed:(id)arg1;
- (void)updateNavButtons;
- (BOOL)searchTextFieldIsFirstResponder;
- (id)progressIndicator;
@property(readonly) NSSearchField *searchField;
- (id)navButtons;
- (id)tocButton;
- (id)shareButton;
- (id)toolbar;
- (void)dealloc;
- (void)setupWithWindow:(id)arg1;
- (id)init;
- (BOOL)validateToolbarItem:(id)arg1;
- (id)toolbarAllowedItemIdentifiers:(id)arg1;
- (id)toolbarDefaultItemIdentifiers:(id)arg1;
- (id)toolbar:(id)arg1 itemForItemIdentifier:(id)arg2 willBeInsertedIntoToolbar:(BOOL)arg3;
- (id)_imageWithName:(id)arg1;
- (void)_handleDebugMenuSelection:(id)arg1;
- (void)_setupDebugMenu;
- (void)_setupSearchField;
- (void)_setupAccessibilityTagsOnSegmentedControl:(id)arg1 withTitle:(id)arg2 andHelp:(id)arg3 forSegment:(long long)arg4;
- (void)_setupSegmentedButtons;
- (void)backForwardMenuClicked:(id)arg1;
- (void)menuNeedsUpdate:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SearchableWebView : WebView
{
    HVWebViewFindController *_findController;
}

@property(readonly, nonatomic) HVWebViewFindController *findController; // @synthesize findController=_findController;
- (void).cxx_destruct;
- (void)layout;
- (void)_commonInitialization;
- (void)_updateScroll:(id)arg1;
- (void)_didScrollDocumentInFrameView:(id)arg1;
- (void)updateSidebarState;
- (void)zoomPageOut:(id)arg1;
- (void)zoomPageIn:(id)arg1;
- (void)_updateScrollForFrameView:(id)arg1;
- (id)currentHelpPageURL;
- (BOOL)isShowingFindInPageBanner;
- (void)printOperationDidRun:(id)arg1 success:(BOOL)arg2 contextInfo:(void *)arg3;
- (void)printHelpPage:(id)arg1;
- (id)helpContentFrame;
- (void)findPrevious;
- (void)findNext;
- (void)dismissFindTextOverlayIfContainsMouseDown:(id)arg1;
- (id)findTextField;
- (void)performTextFinderAction:(id)arg1;
- (void)focusSearchField;
- (void)loadURLInWebappFrame:(id)arg1;
- (void)loadHTMLString:(id)arg1 baseURL:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1 frameName:(id)arg2 groupName:(id)arg3;

@end

@interface HelpWindowController : NSWindowController <HVToolbarHistoryDelegate, HVHistoryManagerDelegate, NSWindowDelegate>
{
    HVToolbarController *_toolbarController;
    NSString *_initialPath;
    HVHistoryManager *_historyManager;
    DDMViewController *_ddmViewController;
    HVResultsViewController *_searchResultsController;
    HVHelpViewController *_helpViewController;
    HVPageLoadErrorHandler *_pageLoadErrorHandler;
}

@property(retain) HVPageLoadErrorHandler *pageLoadErrorHandler; // @synthesize pageLoadErrorHandler=_pageLoadErrorHandler;
@property(readonly) HVHelpViewController *helpViewController; // @synthesize helpViewController=_helpViewController;
@property(retain) HVResultsViewController *searchResultsController; // @synthesize searchResultsController=_searchResultsController;
@property(retain) DDMViewController *ddmViewController; // @synthesize ddmViewController=_ddmViewController;
@property(retain) HVHistoryManager *historyManager; // @synthesize historyManager=_historyManager;
@property(retain) NSString *initialPath; // @synthesize initialPath=_initialPath;
@property(readonly) HVToolbarController *toolbarController; // @synthesize toolbarController=_toolbarController;
- (void).cxx_destruct;
- (id)_bookFromSearchQuery:(id)arg1;
@property(readonly) id <HVContentController><HVURLHandler> currentContentController;
- (void)showPageLoadError:(id)arg1 forFailedItem:(id)arg2;
- (void)showSearchResultsForQuery:(id)arg1 withBookID:(id)arg2 bookTitle:(id)arg3;
- (void)showSearchResultsForQuery:(id)arg1;
- (void)showDDMHelp;
- (void)showLegacyHelp;
- (void)_installContentController:(id)arg1;
- (void)_createToolbarController;
- (void)updateWindowState:(id)arg1;
- (BOOL)window:(id)arg1 willHandleMouseDownEvent:(id)arg2;
- (id)windowWillReturnFieldEditor:(id)arg1 toObject:(id)arg2;
- (void)windowWillClose:(id)arg1;
- (void)setDocumentEdited:(BOOL)arg1;
- (void)bagDidFailToLoad;
- (void)bagDidUpdate;
- (void)windowDidLoad;
- (BOOL)loadFile:(id)arg1;
- (BOOL)_loadDefaultHelpBook;
- (BOOL)loadHistoryItem:(id)arg1;
- (id)currentHistoryItem;
- (id)addHistoryItem:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_setWindowTitleFromHistoryItem:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)windowNibName;
- (void)goToItem:(id)arg1;
- (id)forwardItems;
- (id)backwardItems;
- (void)goBackward;
- (void)goForward;
- (BOOL)canGoBackward;
- (BOOL)canGoForward;
- (BOOL)historyManager:(id)arg1 loadHistoryItem:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HVWebDelegate : NSObject <HPDQueryDelegate, WebFrameLoadDelegate, WebResourceLoadDelegate, WebPolicyDelegate>
{
    id <HVContentController><HVURLHandler> helpViewController;
    HVURLHandler *_currentHandler;
    HPDQuery *_currentQuery;
    NSMutableArray *_currentURLs;
    NSMutableDictionary *_urlCache;
    NSMutableDictionary *_iconURLCache;
    NSMutableDictionary *_previousSearchResults;
    NSURL *_localURLForFailedRemoteURL;
    WebScriptObject *_tocButtonCheckCallback;
    WebScriptObject *_tocButtonUncheckCallback;
    BOOL _loadLocal;
    BOOL _loadingFromHistory;
    BOOL _reachabilityReady;
    NSString *_bookNameOverride;
    NSString *_bookAnchorOverride;
    WebHistoryItem *_redirectedItem;
    NSString *mtTopicIDPrevious;
    struct __SCNetworkReachability *_reachabilityTarget;
    long long _mtOfflineMessageCount;
    long long _mtPagePrintedCount;
    long long _mtTocUsedCount;
    long long _mtSearchUsedCount;
    BOOL _helpScriptScheme;
}

+ (BOOL)isKeyExcludedFromWebScript:(const char *)arg1;
+ (BOOL)isSelectorExcludedFromWebScript:(SEL)arg1;
+ (id)webScriptNameForSelector:(SEL)arg1;
@property(getter=isHelpScriptScheme) BOOL helpScriptScheme; // @synthesize helpScriptScheme=_helpScriptScheme;
@property long long mtSearchUsedCount; // @synthesize mtSearchUsedCount=_mtSearchUsedCount;
@property long long mtTocUsedCount; // @synthesize mtTocUsedCount=_mtTocUsedCount;
@property long long mtPagePrintedCount; // @synthesize mtPagePrintedCount=_mtPagePrintedCount;
@property long long mtOfflineMessageCount; // @synthesize mtOfflineMessageCount=_mtOfflineMessageCount;
@property(retain) WebScriptObject *tocButtonUncheckCallback; // @synthesize tocButtonUncheckCallback=_tocButtonUncheckCallback;
@property(retain) WebScriptObject *tocButtonCheckCallback; // @synthesize tocButtonCheckCallback=_tocButtonCheckCallback;
@property(retain) NSURL *localURLForFailedRemoteURL; // @synthesize localURLForFailedRemoteURL=_localURLForFailedRemoteURL;
@property(retain) WebHistoryItem *redirectedItem; // @synthesize redirectedItem=_redirectedItem;
@property(retain) NSString *bookAnchorOverride; // @synthesize bookAnchorOverride=_bookAnchorOverride;
@property(retain) NSString *bookNameOverride; // @synthesize bookNameOverride=_bookNameOverride;
@property(readonly) NSMutableDictionary *previousSearchResults; // @synthesize previousSearchResults=_previousSearchResults;
@property(retain) HPDQuery *currentQuery; // @synthesize currentQuery=_currentQuery;
@property(retain) HVURLHandler *currentHandler; // @synthesize currentHandler=_currentHandler;
- (void).cxx_destruct;
- (void)mtSendCounts;
- (BOOL)_isLoggableID:(id)arg1 withTitle:(id)arg2;
- (void)mtSendContentUsageWithJSON:(id)arg1;
- (void)mtSendContentUsageForTopic:(id)arg1 appName:(id)arg2;
- (void)mtIncrementCountsOffline:(long long)arg1 printed:(long long)arg2 tocUsed:(long long)arg3 searchUsed:(long long)arg4;
- (void)clearCachedSearchResults;
- (id)osVersion;
- (id)defaultSearchEngine;
- (void)helpQueryDidFinishSearching:(id)arg1;
- (void)helpQuery:(id)arg1 didEncounterError:(id)arg2;
- (void)helpQuery:(id)arg1 didReturnSuggestions:(id)arg2;
- (void)helpQuery:(id)arg1 didReturnResults:(id)arg2;
- (void)resizeTo:(float)arg1 height:(float)arg2 duration:(double)arg3 timingFunction:(id)arg4;
- (void)collapseContentSidebar;
- (void)expandContentSidebar;
- (void)updateContentSidebar;
- (BOOL)sidebarExpanded;
- (void)setSidebarExpanded:(BOOL)arg1;
- (void)setSidebarButtonEnabled:(BOOL)arg1 onExpand:(id)arg2 onCollapse:(id)arg3;
- (void)setTOCButton:(id)arg1;
- (void)showTOCButton:(BOOL)arg1 onCheck:(id)arg2 onUncheck:(id)arg3;
- (BOOL)_isWebAppTOCExpanded;
- (id)localeList;
- (BOOL)shouldIncludeKBInSearch;
- (id)preferredLanguages;
- (BOOL)isOnline;
- (id)URLStringForBookID:(id)arg1;
- (id)URLForBookID:(id)arg1;
- (void)setBreadcrumbBookTitle:(id)arg1 withAnchor:(id)arg2;
- (long long)userType;
- (void)cancelCurrentQuery;
- (void)getSearchSuggestionsForString:(id)arg1;
- (void)startSearchForAnchor:(id)arg1;
- (void)startSearchWithQuery:(id)arg1;
- (void)mailCurrentPage;
- (BOOL)currentPageIsAccessPage;
- (void)printCurrentPage;
- (id)bookWithID:(id)arg1;
- (id)availableBooks;
- (id)systemProfileInfoForDataTypes:(id)arg1 useJSON:(BOOL)arg2;
- (void)webapp_queryDidFinishSearching:(id)arg1;
- (void)webapp_query:(id)arg1 didEncounterError:(id)arg2;
- (void)webapp_query:(id)arg1 didReturnResults:(id)arg2;
- (void)webapp_setFragment:(id)arg1;
- (void)webapp_doSearchForAnchor:(id)arg1;
- (void)webapp_showNoPageFound;
- (void)webapp_doSearch:(id)arg1;
- (void)openBookToLandingPage:(id)arg1;
- (void)updateTextSizeTopBarItemsForWebView:(id)arg1;
- (void)showPageLoadError:(id)arg1;
- (BOOL)isErrorLoadingPageLoadError:(id)arg1;
- (id)fileCreationDateForFileURL:(id)arg1;
- (BOOL)backForwardListContainsURL:(id)arg1;
- (void)setCurrentSearchQuery:(id)arg1;
- (void)removeURLFromCurrentURLs:(id)arg1;
- (void)setCurrentScope:(id)arg1;
- (id)currentBookTitle;
- (id)currentScope;
- (void)handlerEncounteredError:(id)arg1;
- (void)stopSpinner;
- (void)startSpinner;
- (BOOL)contentWantsToHandleURL:(id)arg1;
- (void)callJSMethod:(id)arg1 withArguments:(id)arg2;
- (void)_callJSMethodOnMainThread:(id)arg1;
- (id)_bookFromSearchQuery:(id)arg1;
- (BOOL)_resultsIncludeKBResults:(id)arg1;
- (id)_hrefTextFromActionInfo:(id)arg1;
- (id)_bfListArrayWithWebView:(id)arg1;
- (void)showErrorSheetWithMessageText:(id)arg1 informativeText:(id)arg2;
- (void)loadLocalURLDirectly:(id)arg1;
- (void)_loadLocalURLInWebView:(id)arg1 forFailedURL:(id)arg2 withInitialURL:(id)arg3 error:(id)arg4;
- (void)webView:(id)arg1 unableToImplementPolicyWithError:(id)arg2 frame:(id)arg3;
- (void)webView:(id)arg1 decidePolicyForMIMEType:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5;
- (void)webView:(id)arg1 decidePolicyForNewWindowAction:(id)arg2 request:(id)arg3 newFrameName:(id)arg4 decisionListener:(id)arg5;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5;
- (void)webView:(id)arg1 resource:(id)arg2 didReceiveAuthenticationChallenge:(id)arg3 fromDataSource:(id)arg4;
- (void)webView:(id)arg1 resource:(id)arg2 didFailLoadingWithError:(id)arg3 fromDataSource:(id)arg4;
- (void)webView:(id)arg1 resource:(id)arg2 didReceiveResponse:(id)arg3 fromDataSource:(id)arg4;
- (id)webView:(id)arg1 resource:(id)arg2 willSendRequest:(id)arg3 redirectResponse:(id)arg4 fromDataSource:(id)arg5;
- (id)webView:(id)arg1 identifierForInitialRequest:(id)arg2 fromDataSource:(id)arg3;
- (void)webView:(id)arg1 didFailProvisionalLoadWithError:(id)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 willPerformClientRedirectToURL:(id)arg2 delay:(double)arg3 fireDate:(id)arg4 forFrame:(id)arg5;
- (void)webView:(id)arg1 didChangeLocationWithinPageForFrame:(id)arg2;
- (void)webView:(id)arg1 didClearWindowObject:(id)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 didFinishLoadForFrame:(id)arg2;
- (void)webView:(id)arg1 didStartProvisionalLoadForFrame:(id)arg2;
- (BOOL)isLocalBookErrorURL:(id)arg1;
- (id)mainWindow;
- (void)dealloc;
- (id)initWithHelpViewController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HVEvent : NSObject
{
    NSArray *_searchResults;
    NSString *_searchTerm;
    NSString *_bookID;
    NSString *_time;
    NSString *_method;
}

+ (BOOL)allowHelpDataUpload:(id)arg1;
+ (id)eventWithString:(id)arg1 bookID:(id)arg2 results:(id)arg3 method:(id)arg4;
@property(copy) NSString *method; // @synthesize method=_method;
@property(copy) NSString *time; // @synthesize time=_time;
@property(copy) NSString *bookID; // @synthesize bookID=_bookID;
@property(copy) NSString *searchTerm; // @synthesize searchTerm=_searchTerm;
@property(copy) NSArray *searchResults; // @synthesize searchResults=_searchResults;
- (void).cxx_destruct;
- (void)uploadData;
- (id)GetData;
- (id)JSONPostData:(id *)arg1;
- (id)postDataDictionary;
- (id)dataDictionary;
@property(readonly, getter=isGETMethod) BOOL GETMethod;
@property(readonly, getter=isPOSTMethod) BOOL POSTMethod;

@end

@interface LibraryMenuController : NSObject <NSMenuDelegate>
{
    NSMenu *_libraryMenu;
    NSMenuItem *_macHelpMenuItem;
    NSMenuItem *_topSeparator;
    NSMenuItem *_devHelpMenuItem;
    NSMenu *_devHelpMenu;
    NSMenuItem *_bottomSeparator;
    NSMutableDictionary *_userDict;
    BOOL _needsUpdate;
}

- (void).cxx_destruct;
- (void)menuNeedsUpdate:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)_setUserDict:(id)arg1;
- (void)_populateMenuWithDictionary:(id)arg1;
- (void)openBook:(id)arg1;
- (id)libraryMenu:(id)arg1;
- (void)dealloc;
- (void)awakeFromNib;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HVHTTPSAuthentication : NSObject
{
    NSURLCredential *_credential;
    BOOL _authCanceled;
    BOOL _triedAuthWithoutCreds;
}

+ (id)sharedAuthentication;
@property BOOL triedAuthWithoutCreds; // @synthesize triedAuthWithoutCreds=_triedAuthWithoutCreds;
@property BOOL authCanceled; // @synthesize authCanceled=_authCanceled;
@property __weak NSURLCredential *credential; // @synthesize credential=_credential;
- (void).cxx_destruct;
- (id)init;

@end

@interface GoBackScriptCommand : NSScriptCommand
{
}

- (id)performDefaultImplementation;

@end

@interface HVPageLoadErrorHandler : NSObject
{
    HPDReachability *_reachability;
}

+ (BOOL)isLocalHelpBookErrorTopic:(id)arg1;
+ (unsigned int)errorTypeFromError:(id)arg1;
@property(retain) HPDReachability *reachability; // @synthesize reachability=_reachability;
- (void).cxx_destruct;
- (id)errorAnchorHelpURLForTopicID:(id)arg1;
- (void)showPageLoadError:(id)arg1 forFailedItem:(id)arg2;
- (id)initWithServeHost:(id)arg1;

@end

@interface GoForwardScriptCommand : NSScriptCommand
{
}

- (id)performDefaultImplementation;

@end

@interface GoHomeScriptCommand : NSScriptCommand
{
}

- (id)performDefaultImplementation;

@end

@interface HandleURLScriptCommand : NSScriptCommand
{
}

- (id)performDefaultImplementation;

@end

@interface LookupAnchorScriptCommand : NSScriptCommand
{
}

- (id)performDefaultImplementation;

@end

@interface SearchScriptCommand : NSScriptCommand
{
}

- (id)performDefaultImplementation;

@end

@interface HVHelpViewController : NSViewController <HVContentController, HVURLHandler>
{
    NSURL *_currentURL;
    NSString *_currentBookTitle;
    HPDQuery *_currentQuery;
    NSString *_currentScope;
    BOOL _shouldGeneratePage;
    NSMutableDictionary *_results;
    BOOL javaScriptEnabled;
    BOOL _displayingSearchResult;
    BOOL _updateSearchResultsOnPageLoad;
    BOOL _pageIsLoading;
    WebFrame *_targetFrame;
    NSImage *_applecareIcon;
    HVWebDelegate *_webDelegate;
    float _clipTOCWidth;
    float _maxWindowWidth;
    HVHelpView *_helpView;
}

@property float maxWindowWidth; // @synthesize maxWindowWidth=_maxWindowWidth;
@property float clipTOCWidth; // @synthesize clipTOCWidth=_clipTOCWidth;
@property(retain) WebFrame *targetFrame; // @synthesize targetFrame=_targetFrame;
@property(readonly) HVWebDelegate *webDelegate; // @synthesize webDelegate=_webDelegate;
@property(readonly) HVHelpView *helpView; // @synthesize helpView=_helpView;
@property(retain) NSString *currentBookTitle; // @synthesize currentBookTitle=_currentBookTitle;
@property(retain) HPDQuery *currentQuery; // @synthesize currentQuery=_currentQuery;
- (void).cxx_destruct;
- (void)setContentWantsTOCButton:(BOOL)arg1;
- (BOOL)_sendMessageEventToMailPath:(id)arg1 eventID:(unsigned int)arg2 directObject:(id)arg3 title:(id)arg4 URL:(id)arg5;
- (BOOL)_validateQuery:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)showAlert:(id)arg1;
- (void)_mailCurrentPage;
- (void)sendButtonPressed:(id)arg1;
- (void)reload;
- (void)handleURL:(id)arg1;
- (void)webAppIsLoaded;
- (void)loadWebapp;
- (void)goToLocation:(id)arg1;
- (BOOL)shouldLookOnlineForFile:(id)arg1;
@property(retain) NSString *currentScope;
- (void)_setCurrentScope:(id)arg1 forceBookChange:(BOOL)arg2;
- (void)viewDidAppear;
- (id)init;
- (void)showErrorSheetWithMessageText:(id)arg1 informativeText:(id)arg2;
- (void)resizeTo:(float)arg1 height:(float)arg2 duration:(double)arg3 timingFunction:(id)arg4;
- (void)pageDidFinishLoading;
- (void)goHome:(id)arg1;
- (BOOL)findTextFieldIsFirstResponder;
- (BOOL)canShareCurrentPage;
- (void)windowWillClose;
- (id)ddmAnalytics;
- (id)sharingURLItem;
- (void)zoomOverlayFromPoint:(struct CGPoint)arg1 withURL:(id)arg2;
@property(readonly) SearchableWebView *webView;
- (void)updateSidebarState;
- (void)countTOCUse;
- (void)mailCurrentPage;
- (void)print:(id)arg1;
- (void)searchForQuery:(id)arg1;
- (BOOL)canMakeLarger;
- (BOOL)canMakeSmaller;
- (id)dataForCurrentPage;
- (void)makeTextSmaller:(id)arg1;
- (void)makeTextLarger:(id)arg1;
- (void)showFindBar:(id)arg1;
- (void)dismissOverlayIfContainsMouseDown:(id)arg1;
- (id)stringForSelection;
- (id)currentURL;
- (BOOL)handleArrowKeyEvent:(id)arg1;
- (BOOL)loadHistoryItem:(id)arg1;
@property(readonly) NSView *view;

@end

@interface HVResultCellView : NSTableCellView
{
    NSLayoutConstraint *_widthConstraint;
    NSLayoutConstraint *_appVersionToSummaryConstraint;
}

@property(retain) NSLayoutConstraint *appVersionToSummaryConstraint; // @synthesize appVersionToSummaryConstraint=_appVersionToSummaryConstraint;
@property(retain) NSLayoutConstraint *widthConstraint; // @synthesize widthConstraint=_widthConstraint;
- (void).cxx_destruct;
- (void)setObjectValue:(id)arg1;

@end

@interface HVResultRowView : NSTableRowView
{
    BOOL _mouseInside;
    BOOL _selectable;
    BOOL _needsBottomSeparator;
    NSTrackingArea *_trackingArea;
}

@property(retain) NSTrackingArea *trackingArea; // @synthesize trackingArea=_trackingArea;
@property BOOL needsBottomSeparator; // @synthesize needsBottomSeparator=_needsBottomSeparator;
@property BOOL selectable; // @synthesize selectable=_selectable;
- (void).cxx_destruct;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)updateTrackingAreas;
- (void)ensureTrackingArea;
@property(readonly) BOOL mouseInside;
- (void)setMouseInside:(BOOL)arg1;
- (void)drawBackgroundInRect:(struct CGRect)arg1;
- (void)drawSelectionInRect:(struct CGRect)arg1;
- (void)_drawHighlightInRect:(struct CGRect)arg1;

@end

@interface HVResultsHistoryItem : HVHistoryItem
{
    BOOL _showAllResults;
    BOOL _showAllOtherResults;
    BOOL _showAsGroupedResults;
    NSString *_bookTitle;
    NSArray *_results;
    NSString *_queryString;
    NSString *_scope;
}

+ (id)keyPathsForValuesAffectingOtherResultsCountString;
+ (id)keyPathsForValuesAffectingOtherResults;
+ (id)keyPathsForValuesAffectingFocusedResultsCountString;
+ (id)keyPathsForValuesAffectingFocusedResults;
+ (BOOL)supportsSecureCoding;
+ (id)historyItemWithQueryString:(id)arg1 bookID:(id)arg2 bookTitle:(id)arg3;
@property BOOL showAsGroupedResults; // @synthesize showAsGroupedResults=_showAsGroupedResults;
@property BOOL showAllOtherResults; // @synthesize showAllOtherResults=_showAllOtherResults;
@property BOOL showAllResults; // @synthesize showAllResults=_showAllResults;
@property(readonly) NSString *scope; // @synthesize scope=_scope;
@property(readonly) NSString *queryString; // @synthesize queryString=_queryString;
@property(retain) NSArray *results; // @synthesize results=_results;
@property(retain) NSString *bookTitle; // @synthesize bookTitle=_bookTitle;
- (void).cxx_destruct;
- (id)description;
- (id)otherResultsCountString;
@property(readonly) NSArray *otherResults;
- (id)focusedResultsCountString;
@property(readonly) NSArray *focusedResults;
- (BOOL)isSameTargetAsItem:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (long long)contollerType;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithQueryString:(id)arg1 bookID:(id)arg2 bookTitle:(id)arg3;

@end

@interface HVResultsViewController : NSViewController <HPDQueryDelegate, HVContentController>
{
    BOOL _isOffline;
    HVResultsHistoryItem *_historyItem;
    HVContentLoadController *_loadController;
    NSTableView *_resultsView;
    HVResultCellView *_sizingView;
    NSTextField *_searchTitleTextField;
    NSArray *_cachedTableContent;
    HPDQuery *_currentQuery;
    NSMutableArray *_currentQueryResults;
    unsigned long long _queryNum;
    NSView *_offlineMessageView;
    NSLayoutConstraint *_searchTitleTopConstraint;
}

@property __weak NSLayoutConstraint *searchTitleTopConstraint; // @synthesize searchTitleTopConstraint=_searchTitleTopConstraint;
@property __weak NSView *offlineMessageView; // @synthesize offlineMessageView=_offlineMessageView;
@property BOOL isOffline; // @synthesize isOffline=_isOffline;
@property unsigned long long queryNum; // @synthesize queryNum=_queryNum;
@property(retain) NSMutableArray *currentQueryResults; // @synthesize currentQueryResults=_currentQueryResults;
@property(retain) HPDQuery *currentQuery; // @synthesize currentQuery=_currentQuery;
@property(retain) NSArray *cachedTableContent; // @synthesize cachedTableContent=_cachedTableContent;
@property(retain) NSTextField *searchTitleTextField; // @synthesize searchTitleTextField=_searchTitleTextField;
@property(retain) HVResultCellView *sizingView; // @synthesize sizingView=_sizingView;
@property(retain) NSTableView *resultsView; // @synthesize resultsView=_resultsView;
@property(retain) HVContentLoadController *loadController; // @synthesize loadController=_loadController;
@property(retain) HVResultsHistoryItem *historyItem; // @synthesize historyItem=_historyItem;
- (void).cxx_destruct;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)viewFrameDidChange:(id)arg1;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (id)tableView:(id)arg1 rowViewForRow:(long long)arg2;
- (void)selectRow:(id)arg1;
- (void)_searchMacHelp;
- (void)_searchTheWeb;
- (id)defaultSearchEngine;
- (id)_targetedTableContent;
- (id)_allHelpTableContent;
@property(readonly) NSArray *tableContent;
- (void)resetAndReload;
- (void)searchQuery:(id)arg1 withBookID:(id)arg2 bookTitle:(id)arg3;
- (void)dismissController:(id)arg1;
- (void)toggleOfflineMessage;
- (void)endLoadOperation;
- (void)beginLoadOperation;
- (void)viewWillAppear;
- (void)viewDidLoad;
- (void)helpQuery:(id)arg1 didEncounterError:(id)arg2;
- (void)helpQueryDidFinishSearching:(id)arg1;
- (void)helpQuery:(id)arg1 didReturnResults:(id)arg2;
- (void)windowWillClose;
- (id)ddmAnalytics;
- (BOOL)findTextFieldIsFirstResponder;
- (void)goHome:(id)arg1;
- (BOOL)loadHistoryItem:(id)arg1;
- (void)resizeTo:(float)arg1 height:(float)arg2 duration:(double)arg3 timingFunction:(id)arg4;
- (void)showErrorSheetWithMessageText:(id)arg1 informativeText:(id)arg2;
- (void)pageDidFinishLoading;
- (void)updateSidebarState;
- (void)zoomOverlayFromPoint:(struct CGPoint)arg1 withURL:(id)arg2;
@property(readonly) NSString *currentBookTitle;
- (id)sharingURLItem;
- (void)mailCurrentPage;
- (BOOL)canShareCurrentPage;
- (void)makeTextSmaller:(id)arg1;
- (void)makeTextLarger:(id)arg1;
- (BOOL)canMakeLarger;
- (BOOL)canMakeSmaller;
- (void)countTOCUse;
- (void)print:(id)arg1;
- (void)searchForQuery:(id)arg1;
- (void)showFindBar:(id)arg1;
- (id)dataForCurrentPage;
- (void)dismissOverlayIfContainsMouseDown:(id)arg1;
- (id)stringForSelection;
- (id)currentURL;
- (BOOL)handleArrowKeyEvent:(id)arg1;
@property(retain) NSString *currentScope;
@property(readonly) SearchableWebView *webView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(readonly) NSView *view;

@end

@interface HVTopicListGenerator : NSObject
{
    HPDHelpBook *_helpBook;
    NSString *_cssPath;
    NSString *_templatePath;
    NSString *_anchor;
    NSString *_headline;
    NSURL *_resultURL;
}

@property(readonly) NSURL *resultURL; // @synthesize resultURL=_resultURL;
- (void).cxx_destruct;
- (id)_generateResultPath;
- (void)_replacePlaceholderValuesInString:(id)arg1 usingTopicListItem:(id)arg2;
- (id)_replacePlaceholderValuesInTemplateAtPath:(id)arg1 usingResultsArray:(id)arg2;
- (id)_pathToStyleSheet:(id)arg1 forBook:(id)arg2;
- (id)_pathToTopicListTemplate:(id)arg1 forBook:(id)arg2;
- (id)_addPathToTopicListStyleSheet:(id)arg1 toString:(id)arg2;
- (id)_processXQuery:(id)arg1 withResults:(id)arg2 forBook:(id)arg3 stylesheet:(id)arg4 headline:(id)arg5;
- (BOOL)buildTopicListWithResults:(id)arg1;
- (id)initWithXHelpTopicsURL:(id)arg1;
- (id)initWithHelpURL:(id)arg1;

@end

@interface HVDevWindow : NSWindow
{
    BOOL _firstResponderIsLocked;
}

- (void)setFirstResponderIsLocked:(BOOL)arg1;
- (BOOL)makeFirstResponder:(id)arg1;
- (BOOL)firstResponderIsLocked;
- (BOOL)becomeFirstResponder;
- (BOOL)acceptsFirstResponder;
- (BOOL)canBecomeMainWindow;

@end

@interface HVSearchField : NSSearchField
{
    NSString *_searchTextToolTip;
    NSString *_cancelToolTip;
    long long _searchTextToolTipTag;
    long long _cancelToolTipTag;
    BOOL _toolTipRectanglesUpToDate;
}

@property(retain) NSString *searchTextToolTip; // @synthesize searchTextToolTip=_searchTextToolTip;
@property(retain) NSString *cancelToolTip; // @synthesize cancelToolTip=_cancelToolTip;
- (void).cxx_destruct;
- (id)view:(id)arg1 stringForToolTip:(long long)arg2 point:(struct CGPoint)arg3 userData:(void *)arg4;
- (void)resetCursorRects;
- (id)toolTip;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)setFrameOrigin:(struct CGPoint)arg1;
- (void)removeAllToolTips;
- (void)_updateToolTips;

@end

@interface HVHelpURLProtocol : NSURLProtocol
{
}

+ (id)canonicalRequestForRequest:(id)arg1;
+ (BOOL)requestIsCacheEquivalent:(id)arg1 toRequest:(id)arg2;
+ (BOOL)canInitWithRequest:(id)arg1;
- (Class)responseClass;
- (void)stopLoading;
- (void)startLoading;
- (void)didLoadData:(id)arg1;

@end

@interface HVURLHandler : NSObject
{
    NSURL *_url;
    NSURL *_stirpsURL;
    NSString *_hrefText;
    NSString *_frameName;
    NSString *_fragment;
    NSMutableArray *_processedURLs;
    id <HVURLLoadDelegate> _delegate;
}

+ (id)handlerWithURL:(id)arg1;
@property(retain) NSString *fragment; // @synthesize fragment=_fragment;
@property(retain) NSString *frameName; // @synthesize frameName=_frameName;
@property(retain) NSString *hrefText; // @synthesize hrefText=_hrefText;
@property(retain) NSURL *stirpsURL; // @synthesize stirpsURL=_stirpsURL;
@property(readonly) NSURL *url; // @synthesize url=_url;
@property(retain) id <HVURLLoadDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)pushProcessedURL:(id)arg1;
@property(readonly) __weak NSURL *processedURL; // @dynamic processedURL;
- (id)nextURL;
- (id)process;
- (id)headerFieldsForURL:(id)arg1;
- (BOOL)isLoadless;
- (BOOL)shouldHandleURL:(id)arg1;
- (id)initWithURL:(id)arg1;

@end

@interface HVAnchorURLHandler : HVHelpURLHandler <HPDQueryDelegate>
{
    BOOL _isLoadless;
}

+ (void)_unregisterHandler:(id)arg1;
+ (void)_registerActiveHandler:(id)arg1;
+ (id)_registrationSet;
- (BOOL)isLoadless;
- (void)helpQueryDidFinishSearching:(id)arg1;
- (void)helpQuery:(id)arg1 didEncounterError:(id)arg2;
- (void)helpQuery:(id)arg1 didReturnResults:(id)arg2;
- (id)nextURL;
- (id)process;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HVHelpURLHandler : HVURLHandler
{
    NSMutableDictionary *_results;
    BOOL _hasGivenProcessedURL;
}

+ (id)handlerWithURL:(id)arg1;
@property(readonly) NSDictionary *results; // @synthesize results=_results;
- (void).cxx_destruct;
@property(readonly) __weak HVHelpURL *helpURL; // @dynamic helpURL;
- (id)initWithURL:(id)arg1;

@end

@interface HVShareURLItem : NSObject <NSPasteboardWriting>
{
    NSURL *_url;
    NSString *_title;
}

+ (id)sharingURLForDDMTopic:(id)arg1;
@property(copy) NSString *title; // @synthesize title=_title;
@property(copy) NSURL *url; // @synthesize url=_url;
- (void).cxx_destruct;
- (id)pasteboardPropertyListForType:(id)arg1;
- (unsigned long long)writingOptionsForType:(id)arg1 pasteboard:(id)arg2;
- (id)writableTypesForPasteboard:(id)arg1;
@property(readonly, copy) NSString *description;
- (id)initWithDDMTopic:(id)arg1;
- (id)initWithURL:(id)arg1 title:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HVFileURLHandler : HVURLHandler
{
}

- (id)headerFieldsForURL:(id)arg1;
- (BOOL)shouldHandleURL:(id)arg1;
- (id)nextURL;
- (id)process;
- (id)initWithURL:(id)arg1;

@end

@interface HVBasicURLHandler : HVURLHandler
{
}

- (void)shouldQuitHelpViewer;
- (void)openBasicWindowWithURL:(id)arg1;
- (id)createURLRequest:(id)arg1;
- (id)process;
- (id)process:(id)arg1;

@end

@interface HVOpenbookURLHandler : HVHelpURLHandler
{
}

- (BOOL)shouldHandleURL:(id)arg1;
- (id)nextURL;
- (id)process;

@end

@interface HVRunscriptURLHandler : HVHelpURLHandler
{
}

- (void)_executeScriptWithPath:(id)arg1 andOptionalParam:(id)arg2;
- (BOOL)_shouldRunScript;
- (id)process;
- (BOOL)isLoadless;

@end

@interface HVTopicListURLHandler : HVHelpURLHandler <HPDQueryDelegate>
{
    BOOL _isLoadless;
}

- (BOOL)isLoadless;
- (void)helpQueryDidFinishSearching:(id)arg1;
- (void)helpQuery:(id)arg1 didEncounterError:(id)arg2;
- (void)helpQuery:(id)arg1 didReturnResults:(id)arg2;
- (id)nextURL;
- (id)process;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HVFullPathURLHandler : HVHelpURLHandler
{
}

- (id)process;

@end

@interface HVXHelpScriptCompatURLHandler : HVXHelpScriptURLHandler
{
}

- (void)_executeCommand:(id)arg1 withParams:(id)arg2;
- (id)process;
- (BOOL)isLoadless;

@end

@interface HVHttpURLHandler : HVURLHandler
{
    BOOL _isLoadless;
}

- (BOOL)isLoadless;
- (id)process;

@end

@interface HVSearchURLHandler : HVHelpURLHandler
{
}

- (BOOL)isLoadless;
- (BOOL)shouldHandleURL:(id)arg1;
- (id)nextURL;
- (id)process;

@end

@interface HVExtAppOpenHandler : NSObject
{
    NSString *_bundleId;
}

+ (BOOL)executeWithParams:(id)arg1 error:(id *)arg2;
@property(retain, nonatomic) NSString *bundleId; // @synthesize bundleId=_bundleId;
- (void).cxx_destruct;
- (void)reveal;
- (BOOL)openAsScriptingDictionary;
- (BOOL)open;
- (id)initWithBundleId:(id)arg1;

@end

@interface HVHistoryItem : NSObject <NSCopying, NSSecureCoding>
{
    BOOL _isError;
    NSString *_internalTitle;
    NSString *_URLString;
}

+ (BOOL)supportsSecureCoding;
+ (id)itemWithURLString:(id)arg1 title:(id)arg2;
@property(retain) NSString *URLString; // @synthesize URLString=_URLString;
@property(retain) NSString *internalTitle; // @synthesize internalTitle=_internalTitle;
@property BOOL isError; // @synthesize isError=_isError;
- (void).cxx_destruct;
- (BOOL)updateFromItem:(id)arg1;
- (id)description;
@property(readonly) BOOL promissedTitle;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)isSameTargetAsItem:(id)arg1;
@property(readonly) NSString *bookTitle;
@property(readonly) NSString *title;
- (id)targetURL;
@property(readonly) long long contollerType;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithTitle:(id)arg1;
- (id)initWithURLString:(id)arg1 title:(id)arg2;

@end

@interface HVWebHistoryItem : HVHistoryItem
{
    NSString *_bookTitle;
    WebHistoryItem *_webHistoryItem;
    WebHistoryItem *_originalWebHistoryItem;
}

+ (BOOL)supportsSecureCoding;
+ (id)itemWithWebHistoryItem:(id)arg1 bookTitle:(id)arg2;
@property(retain) WebHistoryItem *originalWebHistoryItem; // @synthesize originalWebHistoryItem=_originalWebHistoryItem;
@property(readonly) WebHistoryItem *webHistoryItem; // @synthesize webHistoryItem=_webHistoryItem;
@property(retain) NSString *bookTitle; // @synthesize bookTitle=_bookTitle;
- (void).cxx_destruct;
- (id)description;
- (BOOL)isSameTargetAsItem:(id)arg1;
- (BOOL)updateFromItem:(id)arg1;
- (BOOL)isRedirect;
@property(readonly) NSURL *targetURL;
- (long long)contollerType;
- (id)title;
- (BOOL)promissedTitle;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithWebHistoryItem:(id)arg1 bookTitle:(id)arg2;

@end

@interface DDMAsideGrayView : NSControl
{
}

- (void)scrollWheel:(id)arg1;
- (void)mouseUp:(id)arg1;

@end

@interface DDMAsideController : NSViewController <WebFrameLoadDelegate, WebPolicyDelegate, WebResourceLoadDelegate>
{
    id _delegate;
    NSLayoutConstraint *_heightConstraint;
    WebView *_webView;
    NSButton *_closeButton;
}

@property(retain) NSButton *closeButton; // @synthesize closeButton=_closeButton;
@property(retain) WebView *webView; // @synthesize webView=_webView;
@property(retain) NSLayoutConstraint *heightConstraint; // @synthesize heightConstraint=_heightConstraint;
@property __weak id delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)dealloc;
- (id)webView:(id)arg1 resource:(id)arg2 willSendRequest:(id)arg3 redirectResponse:(id)arg4 fromDataSource:(id)arg5;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5;
- (void)webView:(id)arg1 didFinishLoadForFrame:(id)arg2;
- (void)_updateBoxHeight;
- (void)dismissAnimated:(BOOL)arg1;
- (void)dismissController:(id)arg1;
- (void)loadView;
- (void)showHTMLString:(id)arg1 inView:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DDMURLHandler : NSObject
{
}

- (id)process:(id)arg1;

@end

@interface HVXHelpScriptURLHandler : HVURLHandler
{
    BOOL _knownValid;
}

+ (id)validatedScriptHandlerWithURL:(id)arg1;
+ (id)handlerWithURL:(id)arg1;
@property BOOL knownValid; // @synthesize knownValid=_knownValid;
- (void)_executeScriptWithPath:(id)arg1 andOptionalParam:(id)arg2;
- (BOOL)_shouldRunScript;
- (id)process;
- (BOOL)isLoadless;

@end

@interface HVSidebarCellView : NSTableCellView
{
    NSLayoutConstraint *_widthConstraint;
}

@property(retain) NSLayoutConstraint *widthConstraint; // @synthesize widthConstraint=_widthConstraint;
- (void).cxx_destruct;

@end

@interface HVSidebarRowView : NSTableRowView
{
    BOOL _selectable;
}

@property BOOL selectable; // @synthesize selectable=_selectable;
@property(readonly) NSButton *outlineButton;
- (BOOL)isEmphasized;
- (id)primarySelectionColor;

@end

@interface HVOutlineView : NSOutlineView
{
}

- (void)mouseDown:(id)arg1;
- (struct CGRect)frameOfOutlineCellAtRow:(long long)arg1;

@end

@interface HVSidebarController : NSObject <NSOutlineViewDelegate>
{
    BOOL _loaded;
    BOOL _settingSelection;
    NSPredicate *_filteringPredicate;
    id <HVSidebarItem> _selectedObject;
    NSOutlineView *_outlineView;
    NSArray<HVSidebarItem> *_content;
    HVSidebarCellView *_sizingView;
    NSTextField *_sizingTextField;
}

+ (void)load;
@property(retain) NSTextField *sizingTextField; // @synthesize sizingTextField=_sizingTextField;
@property(retain) HVSidebarCellView *sizingView; // @synthesize sizingView=_sizingView;
@property(retain, nonatomic) NSArray<HVSidebarItem> *content; // @synthesize content=_content;
@property __weak NSOutlineView *outlineView; // @synthesize outlineView=_outlineView;
- (void).cxx_destruct;
- (id)outlineView:(id)arg1 pasteboardWriterForItem:(id)arg2;
- (void)outlineViewItemDidCollapse:(id)arg1;
- (void)outlineViewItemDidExpand:(id)arg1;
- (id)outlineView:(id)arg1 itemForPersistentObject:(id)arg2;
- (id)outlineView:(id)arg1 persistentObjectForItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldCollapseItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (void)outlineViewSelectionDidChange:(id)arg1;
- (BOOL)outlineView:(id)arg1 shouldSelectItem:(id)arg2;
- (id)outlineView:(id)arg1 rowViewForItem:(id)arg2;
- (id)outlineView:(id)arg1 viewForTableColumn:(id)arg2 item:(id)arg3;
- (id)outlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (void)outlineView:(id)arg1 didAddRowView:(id)arg2 forRow:(long long)arg3;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 isGroupItem:(id)arg2;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
@property(retain) id <HVSidebarItem> selectedObject; // @synthesize selectedObject=_selectedObject;
- (id)itemWithIdentifier:(id)arg1;
- (BOOL)_itemContainsSelection:(id)arg1;
- (void)_expandAllAncestorsOfItem:(id)arg1;
- (id)_parentItemForItem:(id)arg1;
@property(retain) NSPredicate *filteringPredicate; // @synthesize filteringPredicate=_filteringPredicate;
@property(nonatomic) NSString *contentIdentifier;
- (void)awakeFromNib;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HVXManPageURLHandler : HVURLHandler
{
}

- (id)process;

@end

@interface HVHelpTopicsURLProtocol : NSURLProtocol <HPDQueryDelegate>
{
    HVWebDelegate *_webDelegate;
    NSMutableArray *_results;
}

+ (id)canonicalRequestForRequest:(id)arg1;
+ (BOOL)canInitWithRequest:(id)arg1;
+ (void)registerProtocol;
+ (id)userInfoKey;
+ (id)scheme;
- (void).cxx_destruct;
- (void)helpQueryDidFinishSearching:(id)arg1;
- (void)helpQuery:(id)arg1 didEncounterError:(id)arg2;
- (void)helpQuery:(id)arg1 didReturnResults:(id)arg2;
- (void)stopLoading;
- (void)startLoading;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HVHelpContentURLProtocol : NSURLProtocol <NSURLSessionDataDelegate, HVURLLoadDelegate>
{
    HVURLHandler *_handler;
    NSURLResponse *_response;
    HVWebDelegate *_webDelegate;
    NSArray *_bfList;
    NSArray *_topLevelObjects;
    NSTextField *o_messageText;
    NSWindow *o_authWindow;
    NSTextField *o_usernameField;
    NSSecureTextField *o_passwordField;
    NSButton *o_rememberPassword;
    NSURLAuthenticationChallenge *_challenge;
    NSThread *_clientThread;
    NSArray *_modes;
    CDUnknownBlockType _challengeCompletionHandler;
    NSURLSessionDataTask *_task;
}

+ (id)canonicalRequestForRequest:(id)arg1;
+ (BOOL)canInitWithRequest:(id)arg1;
+ (void)registerProtocol;
+ (id)bfListKey;
+ (id)webDelegateKey;
+ (id)userInfoKey;
+ (id)scheme;
+ (void)initialize;
@property(retain) NSURLSessionDataTask *task; // @synthesize task=_task;
@property(copy) CDUnknownBlockType challengeCompletionHandler; // @synthesize challengeCompletionHandler=_challengeCompletionHandler;
@property(copy) NSArray *modes; // @synthesize modes=_modes;
@property __weak NSThread *clientThread; // @synthesize clientThread=_clientThread;
@property(retain) NSURLAuthenticationChallenge *challenge; // @synthesize challenge=_challenge;
- (void).cxx_destruct;
- (void)onThreadPerformBlock:(CDUnknownBlockType)arg1;
- (void)performOnThread:(id)arg1 modes:(id)arg2 block:(CDUnknownBlockType)arg3;
- (void)cancelAuthenticationPressed:(id)arg1;
- (void)authenticatePressed:(id)arg1;
- (void)dismissAuthenticationSheet;
- (void)_showAuthenticationSheet;
- (void)_populateRequest:(id)arg1 withHeaderFieldsFromHandler:(id)arg2;
- (id)fileCreationDateForFileURL:(id)arg1;
- (BOOL)backForwardListContainsURL:(id)arg1;
- (void)startWebAppSearchForAnchor:(id)arg1;
- (id)previousSearchResultsForString:(id)arg1;
- (void)setCurrentSearchQuery:(id)arg1;
- (void)removeURLFromCurrentURLs:(id)arg1;
- (void)setLocalURLForFailedRemoteURL:(id)arg1;
- (void)setCurrentScope:(id)arg1;
- (id)currentScope;
- (void)handlerEncounteredError:(id)arg1;
- (void)handlerHasEndedSearch;
- (void)handlerHasBegunSearch;
- (void)stopSpinner;
- (void)startSpinner;
- (void)handlerDidFinishProcess:(id)arg1;
- (void)handleURLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)handleURLSession:(id)arg1 task:(id)arg2 didReceiveChallenge:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)handleURLSession:(id)arg1 didReceiveChallenge:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)handleURLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 task:(id)arg2 didReceiveChallenge:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 didReceiveChallenge:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)cancelPendingChallenge;
- (void)stopLoading;
- (void)startLoading;
- (void)prepareLoad;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HVSearchController : NSObject <NSTextFieldDelegate, NSTableViewDelegate, NSTableViewDataSource, HPDQueryDelegate, NSSearchFieldDelegate>
{
    NSTableView *suggestionsTable;
    NSWindow *suggestionsWindow;
    NSMutableArray *suggestionsArray;
    NSTextField *offlineTextField;
    NSArray *eventObservers;
    NSArray *eventMonitors;
    HVToolbarController *mToolbarController;
}

@property __weak HVToolbarController *toolbarController; // @synthesize toolbarController=mToolbarController;
- (void).cxx_destruct;
- (id)_offlineTextField;
- (void)_hideSearchForNotification:(id)arg1;
- (void)helpQuery:(id)arg1 didEncounterError:(id)arg2;
- (void)helpQuery:(id)arg1 didReturnResults:(id)arg2;
- (void)helpQueryDidFinishSearching:(id)arg1;
- (void)helpQuery:(id)arg1 didReturnSuggestions:(id)arg2;
- (BOOL)control:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3;
- (void)performQueryOnMainThread:(id)arg1;
- (void)controlTextDidChange:(id)arg1;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (BOOL)tableView:(id)arg1 shouldSelectRow:(long long)arg2;
- (void)tableViewSelectionDidChange:(id)arg1;
- (void)selectionChanged;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)showSuggestionsWindow;
- (void)hideSuggestionsWindow;
- (void)clearSuggestions;
- (void)selectSuggestion:(id)arg1;
- (void)removeEventObservers:(id)arg1;
- (void)removeEventMonitors:(id)arg1;
- (void)registerEventMonitors;
- (void)registerListeners;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HVSuggestionTableCell : NSTextFieldCell
{
}

- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface HVMailToURLHandler : HVURLHandler
{
}

- (id)process;

@end

@interface HVSeasideURLHandler : HVURLHandler
{
    BOOL _isLoadless;
}

- (BOOL)isLoadless;
- (id)process;

@end

@interface HVExtFileOpenHandler : NSObject
{
}

@end

@interface HVContentLoadController : NSObject
{
    BOOL _isLoading;
    double _timeout;
    BOOL _clearsContent;
    NSView *_loadProgressView;
    NSView *_parentView;
}

@property(retain) NSView *parentView; // @synthesize parentView=_parentView;
@property(retain) NSView *loadProgressView; // @synthesize loadProgressView=_loadProgressView;
@property BOOL clearsContent; // @synthesize clearsContent=_clearsContent;
- (void).cxx_destruct;
- (void)endLoad;
- (void)beginLoadInView:(id)arg1 withTimeout:(double)arg2;
- (void)_delayedLoadStart;

@end

@interface HVWebViewContainerView : NSView <NSTextFinderBarContainer>
{
    NSView *_findBarContainerView;
    NSView *_findBarView;
    BOOL _findBarVisible;
    WebView *_contentView;
    NSLayoutConstraint *_contentViewTopConstraint;
    NSLayoutConstraint *_findBarHeightConstraint;
}

@property(nonatomic) __weak NSLayoutConstraint *findBarHeightConstraint; // @synthesize findBarHeightConstraint=_findBarHeightConstraint;
@property(nonatomic) __weak NSLayoutConstraint *contentViewTopConstraint; // @synthesize contentViewTopConstraint=_contentViewTopConstraint;
@property(nonatomic) __weak WebView *contentView; // @synthesize contentView=_contentView;
- (void).cxx_destruct;
- (void)_tileSubviews;
- (void)findBarViewDidChangeHeight;
@property(getter=isFindBarVisible) BOOL findBarVisible;
@property(retain) NSView *findBarView;
@property(readonly, nonatomic) NSView *findBarContainerView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HVOverlayWindowController : NSObject
{
    NSWindow *o_window;
    WebView *o_webview;
    struct CGRect mOriginalOrigin;
    NSURLRequest *mRequest;
}

+ (id)sharedWindowController;
@property(retain) NSURLRequest *request; // @synthesize request=mRequest;
- (void).cxx_destruct;
- (void)windowWillClose:(id)arg1;
- (void)zoomFromPoint:(struct CGPoint)arg1;
- (struct CGRect)centeredOriginRectFromPoint:(struct CGPoint)arg1;

@end

@interface HVURLBag : NSObject <NSURLSessionDataDelegate>
{
    NSDictionary *_dictionary;
    id _delegate;
    NSTimer *_timeoutTimer;
    NSMutableData *_receivedData;
    BOOL _useBundleBag;
}

+ (id)sharedInstance;
@property id delegate; // @synthesize delegate=_delegate;
@property(retain) NSDictionary *dictionary; // @synthesize dictionary=_dictionary;
- (void).cxx_destruct;
- (id)_bundleFilenameForBagKey:(id)arg1;
- (BOOL)bagContainsURL:(id)arg1;
- (id)urlForKey:(id)arg1;
- (BOOL)urlIsToWebapp:(id)arg1;
- (id)webappURL;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HVAllHelpPageURLHandler : HVHelpURLHandler
{
}

- (BOOL)shouldHandleURL:(id)arg1;
- (id)nextURL;
- (id)process;

@end

@interface HVSplitViewItem : NSSplitViewItem
{
}

- (BOOL)_wantsMaterialBackground;

@end

@interface DDMHistoryItem : HVHistoryItem
{
    NSString *_helpBookID;
    NSString *_topicID;
    NSString *_anchorID;
}

+ (BOOL)supportsSecureCoding;
+ (id)historyItemWithHelpBookID:(id)arg1 topicID:(id)arg2 topicName:(id)arg3 anchor:(id)arg4;
@property(readonly) NSString *anchorID; // @synthesize anchorID=_anchorID;
@property(readonly) NSString *topicID; // @synthesize topicID=_topicID;
@property(readonly) NSString *helpBookID; // @synthesize helpBookID=_helpBookID;
- (void).cxx_destruct;
- (id)description;
- (BOOL)updateFromItem:(id)arg1;
- (BOOL)isSameTargetAsItem:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)bookTitle;
- (id)book;
- (long long)contollerType;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithHelpBookID:(id)arg1 tocItem:(id)arg2 topicName:(id)arg3 anchor:(id)arg4;

@end

@interface DDMViewController : NSViewController <DDMViewControllerJSExport, WebFrameLoadDelegate, WebPolicyDelegate, WebResourceLoadDelegate, HVURLHandler, HVContentController>
{
    DDMBook *_internalDDMBook;
    DDMTocItem *_internalSelectedTocItem;
    NSString *_internalAnchorID;
    NSArray *_sidebarContent;
    DDMAsideController *_asideController;
    HVContentLoadController *_loadController;
    NSSplitViewController *_splitViewController;
    NSViewController *_sidebarViewController;
    NSViewController *_rightPaneViewController;
    NSView *_moreHelpView;
    SearchableWebView *_webView;
    HVWebDelegate *_webDelegate;
    HVSidebarController *_sidebarController;
    JSValue *_setSidebarStateInWebApp;
    JSValue *_toggleAnchorInWebApp;
}

@property(retain) JSValue *toggleAnchorInWebApp; // @synthesize toggleAnchorInWebApp=_toggleAnchorInWebApp;
@property(retain) JSValue *setSidebarStateInWebApp; // @synthesize setSidebarStateInWebApp=_setSidebarStateInWebApp;
@property(retain) HVSidebarController *sidebarController; // @synthesize sidebarController=_sidebarController;
@property(retain) HVWebDelegate *webDelegate; // @synthesize webDelegate=_webDelegate;
@property __weak SearchableWebView *webView; // @synthesize webView=_webView;
@property(retain) NSView *moreHelpView; // @synthesize moreHelpView=_moreHelpView;
@property(retain) NSViewController *rightPaneViewController; // @synthesize rightPaneViewController=_rightPaneViewController;
@property(retain) NSViewController *sidebarViewController; // @synthesize sidebarViewController=_sidebarViewController;
@property(retain) NSSplitViewController *splitViewController; // @synthesize splitViewController=_splitViewController;
@property(retain) HVContentLoadController *loadController; // @synthesize loadController=_loadController;
@property(retain) DDMAsideController *asideController; // @synthesize asideController=_asideController;
@property(retain) NSArray *sidebarContent; // @synthesize sidebarContent=_sidebarContent;
@property(retain) NSString *internalAnchorID; // @synthesize internalAnchorID=_internalAnchorID;
@property(retain) DDMTocItem *internalSelectedTocItem; // @synthesize internalSelectedTocItem=_internalSelectedTocItem;
@property(retain) DDMBook *internalDDMBook; // @synthesize internalDDMBook=_internalDDMBook;
- (void).cxx_destruct;
- (void)_mtIterateError:(long long)arg1;
- (void)_mtLogTopic:(id)arg1;
- (void)_showPageLoadError:(id)arg1 forItem:(id)arg2;
- (void)_loadAsideWithTopicID:(id)arg1 withTitle:(id)arg2;
- (void)asideControllerDismissed:(id)arg1;
- (void)_showAsideHTML:(id)arg1;
- (void)_jumpToAnchor:(id)arg1;
- (void)_setTopic:(id)arg1 jumpToAnchor:(id)arg2;
- (void)_requestTopicWithID:(id)arg1 jumpToAnchor:(id)arg2;
- (void)_loadTopicWithID:(id)arg1 jumpToAnchor:(id)arg2;
- (void)_requestHelpBookID:(id)arg1 selectTopicWithID:(id)arg2 jumpToAnchor:(id)arg3;
- (void)_setDDMBook:(id)arg1 selectTopicWithID:(id)arg2 jumpToAnchor:(id)arg3;
- (void)_loadHelpBookID:(id)arg1 selectTopicWithID:(id)arg2 jumpToAnchor:(id)arg3;
- (void)_setSidebarSelection:(id)arg1;
- (id)_currentDDMTopic;
@property(readonly) DDMTocItem *selectedTocItem;
- (void)setSelectedTocItem:(id)arg1;
@property(readonly) DDMBook *ddmBook;
- (void)_updateSidebarStateAndUpdateWebApp:(BOOL)arg1;
- (void)_updateTOCButtonState;
- (void)setContentWantsTOCButton:(BOOL)arg1;
- (void)endLoad;
- (void)beginLoadWithNewContent:(BOOL)arg1;
- (void)moreHelpClicked:(id)arg1;
- (void)viewDidLoad;
- (void)_setupSplitView;
- (void)selectedName:(id)arg1;
@property(readonly) BOOL sidebarState;
- (void)setSidebarExpanded:(BOOL)arg1;
@property(readonly) NSString *metaFramework;
@property(readonly) NSString *acEnvironmentName;
@property(readonly) NSString *environmentName;
@property(readonly) NSString *currentAnchor;
@property(readonly) NSString *currentTopicTitle;
- (id)currentTopicSearchTitle;
@property(readonly) NSString *currentTopicID;
@property(readonly) NSString *currentBookProductVersion;
@property(readonly) NSString *currentBookProduct;
@property(readonly) NSString *currentBookBuildID;
@property(readonly) NSString *currentBookVersion;
@property(readonly) NSString *currentBookLocale;
@property(readonly) NSString *currentBookTitle;
- (void)webView:(id)arg1 didCreateJavaScriptContext:(id)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 resource:(id)arg2 didFailLoadingWithError:(id)arg3 fromDataSource:(id)arg4;
- (id)webView:(id)arg1 resource:(id)arg2 willSendRequest:(id)arg3 redirectResponse:(id)arg4 fromDataSource:(id)arg5;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5;
- (void)webView:(id)arg1 decidePolicyForNewWindowAction:(id)arg2 request:(id)arg3 newFrameName:(id)arg4 decisionListener:(id)arg5;
- (void)setWindowLocationHash;
- (void)webView:(id)arg1 didFinishLoadForFrame:(id)arg2;
- (void)webView:(id)arg1 didFailProvisionalLoadWithError:(id)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 willPerformClientRedirectToURL:(id)arg2 delay:(double)arg3 fireDate:(id)arg4 forFrame:(id)arg5;
- (void)webView:(id)arg1 didStartProvisionalLoadForFrame:(id)arg2;
- (BOOL)shouldLookOnlineForFile:(id)arg1;
- (void)handleURL:(id)arg1;
- (id)_parametersDictionaryFromHelpURL:(id)arg1;
- (void)setTargetFrame:(id)arg1;
- (void)windowWillClose;
- (id)ddmAnalytics;
- (BOOL)findTextFieldIsFirstResponder;
- (void)resizeTo:(float)arg1 height:(float)arg2 duration:(double)arg3 timingFunction:(id)arg4;
- (void)showAlert:(id)arg1;
- (void)showErrorSheetWithMessageText:(id)arg1 informativeText:(id)arg2;
- (void)pageDidFinishLoading;
- (void)updateSidebarState;
- (void)zoomOverlayFromPoint:(struct CGPoint)arg1 withURL:(id)arg2;
- (void)countTOCUse;
- (void)mailCurrentPage;
- (void)print:(id)arg1;
- (void)searchForQuery:(id)arg1;
- (BOOL)canMakeLarger;
- (BOOL)canMakeSmaller;
- (id)sharingURLItem;
- (id)dataForCurrentPage;
- (void)makeTextSmaller:(id)arg1;
- (void)makeTextLarger:(id)arg1;
- (void)showFindBar:(id)arg1;
- (void)dismissOverlayIfContainsMouseDown:(id)arg1;
- (id)stringForSelection;
- (BOOL)canShareCurrentPage;
- (id)currentURL;
- (void)goHome:(id)arg1;
- (BOOL)loadHistoryItem:(id)arg1;
- (BOOL)handleArrowKeyEvent:(id)arg1;
@property(retain) NSString *currentScope;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(readonly) NSView *view;

@end

@interface HVXHelpActionURLHandler : HVURLHandler
{
}

- (id)_paramsDictFromQueryItems:(id)arg1;
- (void)_dispatchAction:(id)arg1 params:(id)arg2;
- (BOOL)_shouldRunAction;
- (id)process;
- (BOOL)isLoadless;

@end

@interface HVBookmarkURLHandler : HVHelpURLHandler
{
    BOOL _isLoadless;
}

- (BOOL)isLoadless;
- (id)process;

@end

@interface HVAccessibiltiyIgnoredImageCell : NSImageCell
{
}

- (BOOL)accessibilityIsIgnored;

@end

@interface NSFileManager (HelpViewerFileManagerAdditions)
- (id)pathOfResolvedAliasAtPath:(id)arg1;
- (BOOL)isAliasFileAtPath:(id)arg1;
- (BOOL)isAppleHelpIndexFileAtPath:(id)arg1;
- (BOOL)isHTMLOrPlainTextFileAtPath:(id)arg1;
@end

@interface NSString (HelpViewerNSStringFileUtilities)
+ (id)resolvedPaths;
+ (id)htmlStringFromData:(id)arg1;
- (id)stringByResolvingAliases:(BOOL)arg1 andSymlinks:(BOOL)arg2;
- (BOOL)isDescendentOfPath:(id)arg1;
- (id)dataFromHTMLString;
@end

@interface NSString (HTMLMIMETagMethods)
+ (unsigned int)stringEncodingFromMimeCharsetTag:(id)arg1;
+ (id)mimeCharsetTagFromStringEncoding:(unsigned int)arg1;
@end

@interface NSData (HTMLMIMETagMethods)
- (id)findCharsetTag;
- (unsigned int)findEncodingFromCharsetTag;
@end

@interface NSMutableAttributedString (HelpViewerMutableAttributedStringUtilities)
- (void)appendString:(id)arg1;
@end

@interface NSString (HelpViewerStringUtilities)
- (id)URLByEscapingString;
- (id)stringByRemovingHTMLEntities;
- (id)stringByAddingHTMLEscapes;
- (id)indexesOfString:(id)arg1;
- (char *)createISOLatin1CString;
- (char *)createMacRomanCString;
- (id)stringReplacingAllInstancesOfString:(id)arg1 withString:(id)arg2;
- (id)stringByDeletingTrailingSlash;
- (id)stringByRemovingWhitespace;
- (id)stringByTrimmingWhitespace;
@end

@interface NSURL (FragmentAppending)
+ (id)URLRemovingHelpScheme:(id)arg1 fromURL:(id)arg2;
+ (id)URLRemovingFragmentFromURL:(id)arg1;
+ (id)URLWithURL:(id)arg1 andFragment:(id)arg2;
@end

@interface NSURL (HVHttpURLHandlerExtensions)
- (id)hostAndPath;
@end

@interface NSString (HelpURLUtilityMethods)
- (id)pathFromPartialURLOrHFSPath;
- (id)stringRemovingWrappingQuotes;
@end

@interface NSMutableURLRequest (HVHelpUserInfo)
- (void)setHelpUserInfo:(id)arg1;
@end

@interface NSURLRequest (HVHelpUserInfo)
- (void)clearHelpUserInfoFromCache;
- (id)helpUserInfo;
@end

@interface WebDynamicScrollBarsView (HV)
- (void)layout;
- (void)scrollClipView:(id)arg1 toPoint:(struct CGPoint)arg2;
@end

@interface NSTextField (HVTextFieldAdditions)
- (BOOL)isFirstResponder;
@end

@interface NSEvent (BrowserExtras)
+ (BOOL)mouseButtonIsDown;
- (unsigned short)firstCharacterIgnoringModifiers;
- (BOOL)isCommandUnderscoreAboveMinusKeyDown;
- (BOOL)isCommandAndShiftKey;
- (BOOL)isCommandKeyShortcut;
- (BOOL)isKeyboardShortcut;
- (BOOL)isCommandEqualBelowPlusKeyDown;
- (unsigned short)characterCodeWithCarbonModifiers:(unsigned int)arg1;
@end

@interface HPDResult (HVResultsViewControllerAdditions)
- (id)iconURL;
@end

@interface NSObject (DDMAsideControllerDelegate)
- (void)asideControllerDismissed:(id)arg1;
@end

@interface NSOutlineView (HVAdditions)
- (BOOL)handleArrowKeyEvent:(id)arg1;
@end

@interface DDMTocItem (SidebarGroup) <HVSidebarItem>
@property(readonly) BOOL isGroup;
@property(readonly) NSString *itemIdentifier;
@property(readonly, nonatomic) NSString *name;

// Remaining properties
@property(retain) NSArray<HVSidebarItem> *childItems;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface NSWorkspace (HelpViewerWorkspaceExtras)
- (id)pathForApplicationWithBundleIdentifier:(id)arg1;
- (id)pathForApplicationForURLScheme:(id)arg1;
@end

